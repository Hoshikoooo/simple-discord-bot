msgid ""
msgstr ""
"Project-Id-Version: discordpy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-31 10:25+0000\n"
"PO-Revision-Date: 2022-04-04 09:28\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: discordpy\n"
"X-Crowdin-Project-ID: 362783\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /interactions/api.pot\n"
"X-Crowdin-File-ID: 90\n"
"Language: ja_JP\n"

#: ../../interactions/api.rst:4
msgid "Interactions API Reference"
msgstr "インタラクションAPIリファレンス"

#: ../../interactions/api.rst:6
msgid "The following section outlines the API of interactions, as implemented by the library."
msgstr "次のセクションでは、ライブラリによって実装されたインタラクションの API について概説します。"

#: ../../interactions/api.rst:8
msgid "For documentation about the rest of the library, check :doc:`/api`."
msgstr "ライブラリの残りの部分のドキュメントについては、 :doc:`/api` を参照してください。"

#: ../../interactions/api.rst:11
msgid "Models"
msgstr "モデル"

#: ../../interactions/api.rst:13
msgid "Similar to :ref:`discord_api_models`, these are not meant to be constructed by the user."
msgstr ":ref:`discord_api_models` と同様に、これらはユーザーが構築するものではありません。"

#: ../../interactions/api.rst:16
msgid "Interaction"
msgstr "インタラクション"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:1
msgid "Represents a Discord interaction."
msgstr "Discordのインタラクションを表します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:3
msgid "An interaction happens when a user does an action that needs to be notified. Current examples are slash commands and components."
msgstr "インタラクションは、ユーザーに返信をする必要のあるアクションが行われた際に発生します。現在の例はスラッシュコマンドとコンポーネントです。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:10
msgid "The interaction's ID."
msgstr "インタラクションのID。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.client:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.guild:0
#: ../../docstring of discord.Interaction.channel:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:0
#: ../../docstring of discord.Interaction.namespace:0
#: ../../docstring of discord.Interaction.command:0
#: ../../docstring of discord.Interaction.response:0
#: ../../docstring of discord.Interaction.followup:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.created_at:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.expires_at:0
#: ../../docstring of discord.InteractionMessage.clean_content:0
#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.created_at:0
#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.edited_at:0
#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.jump_url:0
#: ../../docstring of discord.InteractionMessage.raw_channel_mentions:0
#: ../../docstring of discord.InteractionMessage.raw_mentions:0
#: ../../docstring of discord.InteractionMessage.raw_role_mentions:0
#: ../../docstring of discord.InteractionMessage.system_content:0
#: ../../../discord/components.py:docstring of discord.components.Component:0
#: ../../../discord/components.py:docstring of discord.components.ActionRow:0
#: ../../../discord/components.py:docstring of discord.components.ActionRow:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.components.TextInput:0
#: ../../../discord/components.py:docstring of discord.TextInput.default:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.guild:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.mention:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.created_at:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.guild:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.parent:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.mention:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:0
#: ../../../discord/ui/view.py:docstring of discord.ui.View.timeout:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.Modal.timeout:0
#: ../../../discord/ui/item.py:docstring of discord.ui.Item.view:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.style:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.url:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.disabled:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.label:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.emoji:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.view:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.custom_id:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.placeholder:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.min_values:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.max_values:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.options:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.disabled:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.values:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.view:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.custom_id:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.value:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.label:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.placeholder:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.required:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.min_length:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.max_length:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.style:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.view:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.default:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Command.callback:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Command.root_parent:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.ContextMenu.callback:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Group.root_parent:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Group.commands:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingRole:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingAnyRole:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingPermissions:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.BotMissingPermissions:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandSignatureMismatch:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:0
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:0
msgid "type"
msgstr "型"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:12
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:36
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:30
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:37
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:30
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:36
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:27
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:52
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:27
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:45
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:58
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:90
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.min_values:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.max_values:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.min_length:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.max_length:3
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:8
#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:38
msgid ":class:`int`"
msgstr ":class:`int`"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:16
msgid "The interaction type."
msgstr "インタラクションの種類。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:18
msgid ":class:`InteractionType`"
msgstr ":class:`InteractionType`"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:22
msgid "The guild ID the interaction was sent from."
msgstr "インタラクションが送信されたギルドのID。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:24
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:30
#: ../../../discord/components.py:docstring of discord.components.TextInput:49
#: ../../../discord/components.py:docstring of discord.components.TextInput:55
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:83
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:18
msgid "Optional[:class:`int`]"
msgstr "Optional[:class:`int`]"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:28
msgid "The channel ID the interaction was sent from."
msgstr "インタラクションが送信されたチャンネルのID。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:34
msgid "The application ID that the interaction was for."
msgstr "インタラクションの対象となったアプリケーションのID。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:40
msgid "The user or member that sent the interaction."
msgstr "インタラクションを送信したユーザーまたはメンバー。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:42
msgid "Union[:class:`User`, :class:`Member`]"
msgstr "Union[:class:`User`, :class:`Member`]"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:46
msgid "The message that sent this interaction."
msgstr "このインタラクションを送信したメッセージ。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:48
msgid "Optional[:class:`Message`]"
msgstr "Optional[:class:`Message`]"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:52
msgid "The token to continue the interaction. These are valid for 15 minutes."
msgstr "インタラクションを続行するのに使うトークン。有効期限は15分です。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:55
#: ../../docstring of discord.InteractionMessage.clean_content:15
#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.jump_url:3
#: ../../docstring of discord.InteractionMessage.system_content:8
#: ../../../discord/components.py:docstring of discord.components.TextInput:19
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:48
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:54
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:15
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:21
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:39
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.mention:3
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:39
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.mention:3
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:15
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:21
#: ../../../discord/components.py:docstring of discord.components.SelectOption:12
#: ../../../discord/components.py:docstring of discord.components.SelectOption:20
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:33
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:45
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.custom_id:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.custom_id:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.label:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.placeholder:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.default:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:16
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:23
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:15
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:12
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:20
#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:36
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:11
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:11
msgid ":class:`str`"
msgstr ":class:`str`"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:59
msgid "The raw interaction data."
msgstr "生のインタラクションデータ。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:61
msgid ":class:`dict`"
msgstr ":class:`dict`"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:65
msgid "The locale of the user invoking the interaction."
msgstr "インタラクションを呼び出したユーザーのロケール。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:67
msgid ":class:`Locale`"
msgstr ":class:`Locale`"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:71
msgid "The preferred locale of the guild the interaction was sent from, if any."
msgstr "インタラクションの送信元のギルドの優先ロケール。もし無ければ ``None`` となります。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:73
msgid "Optional[:class:`Locale`]"
msgstr "Optional[:class:`Locale`]"

#: ../../../discord/interactions.py:docstring of discord.Interaction.client:1
msgid "The client that is handling this interaction."
msgstr "このインタラクションを処理するクライアント。"

#: ../../../discord/interactions.py:docstring of discord.Interaction.client:3
msgid ":class:`Client`"
msgstr ":class:`Client`"

#: ../../../discord/interactions.py:docstring of discord.Interaction.guild:1
msgid "The guild the interaction was sent from."
msgstr "インタラクションが送信されたギルド。"

#: ../../../discord/interactions.py:docstring of discord.Interaction.guild:3
msgid "Optional[:class:`Guild`]"
msgstr "Optional[:class:`Guild`]"

#: ../../docstring of discord.Interaction.channel:1
msgid "The channel the interaction was sent from."
msgstr "インタラクションが送信されたチャンネル。"

#: ../../docstring of discord.Interaction.channel:3
msgid "Note that due to a Discord limitation, DM channels are not resolved since there is no data to complete them. These are :class:`PartialMessageable` instead."
msgstr "Discordの制限により、DMチャンネルは入れるデータがないため解決されないことに注意してください。代わりに :class:`PartialMessageable` があります。"

#: ../../docstring of discord.Interaction.channel:6
msgid "Optional[Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, :class:`Thread`]]"
msgstr "Optional[Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, :class:`Thread`]]"

#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:1
msgid "The resolved permissions of the member in the channel, including overwrites."
msgstr "権限の上書きを含むチャンネルでのメンバーの権限。"

#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:3
msgid "In a non-guild context where this doesn't apply, an empty permissions object is returned."
msgstr "権限がないギルドではない場所の場合は、空のパーミッションオブジェクトが返されます。"

#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:5
msgid ":class:`Permissions`"
msgstr ":class:`Permissions`"

#: ../../docstring of discord.Interaction.namespace:1
msgid "The resolved namespace for this interaction."
msgstr "このインタラクションの解決された名前空間。"

#: ../../docstring of discord.Interaction.namespace:3
msgid "If the interaction is not an application command related interaction or the client does not have a tree attached to it then this returns an empty namespace."
msgstr "アプリケーションコマンドに関連したインタラクションでない場合、またはクライアントにツリーが関連付けられていない場合は、空の名前空間を返します。"

#: ../../docstring of discord.Interaction.namespace:6
msgid ":class:`app_commands.Namespace`"
msgstr ":class:`app_commands.Namespace`を使用します。"

#: ../../docstring of discord.Interaction.command:1
msgid "The command being called from this interaction."
msgstr "このインタラクションから呼び出されるコマンド。"

#: ../../docstring of discord.Interaction.command:4
msgid "If the interaction is not an application command related interaction or the command is not found in the client's attached tree then ``None`` is returned."
msgstr "アプリケーションコマンドに関連したインタラクションでない場合、またはコマンドがクライアントのアタッチされたツリーにない場合は、 ``None`` が返されます。"

#: ../../docstring of discord.Interaction.command:7
msgid "Optional[Union[:class:`app_commands.Command`, :class:`app_commands.ContextMenu`]]"
msgstr "Optional[Union[:class:`app_commands.Command`, :class:`app_commands.ContextMenu`]]"

#: ../../docstring of discord.Interaction.response:1
msgid "Returns an object responsible for handling responding to the interaction."
msgstr "インタラクションへの応答をするためのオブジェクトを返します。"

#: ../../docstring of discord.Interaction.response:3
msgid "A response can only be done once. If secondary messages need to be sent, consider using :attr:`followup` instead."
msgstr "応答は一度だけ行うことができます。複数回にわたってメッセージを送信する必要がある場合は、代わりに :attr:`followup` を使用することを検討してください。"

#: ../../docstring of discord.Interaction.response:6
msgid ":class:`InteractionResponse`"
msgstr ":class:`InteractionResponse`"

#: ../../docstring of discord.Interaction.followup:1
msgid "Returns the follow up webhook for follow up interactions."
msgstr "フォローアップのインタラクションのためのフォローアップウェブフックを返します。"

#: ../../docstring of discord.Interaction.followup:3
msgid ":class:`Webhook`"
msgstr ":class:`Webhook`"

#: ../../../discord/interactions.py:docstring of discord.Interaction.created_at:1
msgid "When the interaction was created."
msgstr "インタラクションが作成された時間を示します。"

#: ../../../discord/interactions.py:docstring of discord.Interaction.created_at:3
#: ../../../discord/interactions.py:docstring of discord.Interaction.expires_at:3
#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.created_at:3
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.created_at:3
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:96
msgid ":class:`datetime.datetime`"
msgstr ":class:`datetime.datetime`"

#: ../../../discord/interactions.py:docstring of discord.Interaction.expires_at:1
msgid "When the interaction expires."
msgstr "インタラクションが期限切れになった時の時間を示します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.is_expired:1
msgid ":class:`bool`: Returns ``True`` if the interaction is expired."
msgstr ":class:`bool`：インタラクションが期限切れした場合には ``True`` を返します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reactions:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:1
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:1
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:1
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:1
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:1
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_timeout:1
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_submit:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_error:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.on_timeout:1
#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:1
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:1
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:1
#: ../../../discord/ui/text_input.py:docstring of discord.ui.item.Item.callback:1
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:1
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:1
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:1
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.interaction_check:1
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:1
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:1
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:1
msgid "|coro|"
msgstr "|coro|"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:3
msgid "Fetches the original interaction response message associated with the interaction."
msgstr "インタラクションに関連付けられた元のメッセージを取得します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:5
msgid "If the interaction response was a newly created message (i.e. through :meth:`InteractionResponse.send_message` or :meth:`InteractionResponse.defer`, where ``thinking`` is ``True``) then this returns the message that was sent using that response. Otherwise, this returns the message that triggered the interaction (i.e. through a component)."
msgstr "もしインタラクションの応答が新しく作成されたメッセージである場合（ :meth:`InteractionResponse.send_message` や ``thinking`` が ``True`` の :meth:`InteractionResponse.defer` 等）はそのメッセージを返します。それ以外の場合は、インタラクションが作成されたメッセージを返します。（コンポーネント 等）"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:10
msgid "Repeated calls to this will return a cached value."
msgstr "これを繰り返し呼び出すと、キャッシュされた値が返されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reactions:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.describe:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:0
msgid "Raises"
msgstr "例外"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:12
msgid "Fetching the original response message failed."
msgstr "元のインタラクションのメッセージの取得に失敗した際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:13
msgid "The channel for the message could not be resolved."
msgstr "メッセージのチャンネルの解決ができなかった際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:14
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:33
msgid "The interaction response message does not exist."
msgstr "インタラクションの応答のメッセージが存在しなかった場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.resolve:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.resolve:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.wait:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.copy:0
msgid "Returns"
msgstr "戻り値"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:16
msgid "The original interaction response message."
msgstr "元のインタラクションのレスポンスのメッセージ。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.resolve:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.resolve:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.wait:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.copy:0
msgid "Return type"
msgstr "戻り値の型"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:3
msgid "Edits the original interaction response message."
msgstr "元のインタラクションのレスポンスのメッセージを編集します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:5
msgid "This is a lower level interface to :meth:`InteractionMessage.edit` in case you do not want to fetch the message and save an HTTP request."
msgstr "これは :meth:`InteractionMessage.edit` の下位互換のインターフェースで、メッセージを取得及び、HTTPリクエストを保存することが必要でない場合に使用します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:8
msgid "This method is also the only way to edit the original message if the message sent was ephemeral."
msgstr "また、メッセージがephemeralで送られた場合、この方法でのみメッセージを編集することができます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:0
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:0
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_submit:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_error:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.remove_item:0
#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:0
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:0
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:0
#: ../../../discord/ui/text_input.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.walk_commands:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.command:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:0
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.add_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.remove_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.add_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.remove_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.command:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.context_menu:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.describe:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.guilds:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:0
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:0
#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.transform:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:11
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:5
msgid "The content to edit the message with or ``None`` to clear it."
msgstr "メッセージの内容を編集する場合はそのメッセージを、内容を削除する際は、``None`` を指定します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:13
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:7
msgid "A list of embeds to edit the message with."
msgstr "メッセージを編集するための埋め込みのリスト。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:15
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:10
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:9
msgid "The embed to edit the message with. ``None`` suppresses the embeds. This should not be mixed with the ``embeds`` parameter."
msgstr "メッセージを編集するための埋め込み。 ``None`` を渡すと埋め込みが除去されます。 ``embeds`` パラメータと同時に使用できません。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:18
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:13
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:12
msgid "A list of attachments to keep in the message as well as new files to upload. If ``[]`` is passed then all attachments are removed.  .. note::      New files will always appear after current attachments."
msgstr "メッセージに保持される添付ファイル、及びアップロードする新しいファイルのリスト。 ``[]`` が渡された場合、全ての添付ファイルが削除されます。\n"
".. note::\n"
"    新しいファイルは常に現在の添付ファイルのあとに表示されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:18
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:13
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:12
msgid "A list of attachments to keep in the message as well as new files to upload. If ``[]`` is passed then all attachments are removed."
msgstr "メッセージ内で残す添付ファイルと、新規にアップロードする添付ファイルのリスト。 ``[]`` が渡された場合すべての添付ファイルが除去されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:23
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:18
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:17
msgid "New files will always appear after current attachments."
msgstr "新しいファイルは常に現在の添付ファイルのあとに表示されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:25
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:25
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:19
msgid "Controls the mentions being processed in this message. See :meth:`.abc.Messageable.send` for more information."
msgstr "このメッセージで処理されるメンションを制御します。詳細は :meth:`.abc.Messageable.send` を参照してください。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:28
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:20
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:22
msgid "The updated view to update this message with. If ``None`` is passed then the view is removed."
msgstr "このメッセージを更新するために更新されたビュー。 ``None`` が渡された場合、ビューは削除されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:32
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:27
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:26
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:10
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:10
msgid "Editing the message failed."
msgstr "メッセージの編集に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:34
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:27
msgid "Edited a message that is not yours."
msgstr "自分以外のメッセージを編集しようとした場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:35
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:28
msgid "You specified both ``embed`` and ``embeds``"
msgstr "``embed`` と ``embeds`` の両方を指定した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:36
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:35
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:29
msgid "The length of ``embeds`` was invalid."
msgstr "``embeds`` の長さが無効だった場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:38
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:31
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:13
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:13
msgid "The newly edited message."
msgstr "編集された新しいメッセージ。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:39
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:32
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:14
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:14
msgid ":class:`InteractionMessage`"
msgstr ":class:`InteractionMessage`"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:3
msgid "Deletes the original interaction response message."
msgstr "元のインタラクション応答メッセージを削除します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:5
msgid "This is a lower level interface to :meth:`InteractionMessage.delete` in case you do not want to fetch the message and save an HTTP request."
msgstr "これは :meth:`InteractionMessage.delete` の下位互換のインターフェースで、メッセージを取得及び、HTTPリクエストを保存することが必要でない場合に使用します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:11
msgid "Deleting the message failed."
msgstr "メッセージの削除に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:9
msgid "The interaction response message does not exist or has already been deleted."
msgstr "インタラクションの応答のメッセージが存在しなかった場合、または既に削除されていた場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:10
msgid "Deleted a message that is not yours."
msgstr "自分以外のメッセージを削除しようとした場合。"

#: ../../interactions/api.rst:24
msgid "InteractionResponse"
msgstr "InteractionResponse"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse:1
msgid "Represents a Discord interaction response."
msgstr "Discordのインタラクションレスポンスを表します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse:3
msgid "This type can be accessed through :attr:`Interaction.response`."
msgstr "この型は :attr:`Interaction.response` からアクセスできます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.is_done:1
msgid ":class:`bool`: Indicates whether an interaction response has been done before."
msgstr ":class:`bool`: インタラクションに既に応答したか。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.is_done:3
msgid "An interaction can only be responded to once."
msgstr "インタラクションは一度だけ応答できます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:3
msgid "Defers the interaction response."
msgstr "インタラクションの応答を遅らせます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:5
msgid "This is typically used when the interaction is acknowledged and a secondary action will be done later."
msgstr "これは通常、インタラクションを認識した後、後で他のことを実行する場合に使われます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:8
msgid "This is only supported with the following interaction types:"
msgstr "以下のインタラクションでのみサポートされています："

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:10
msgid ":attr:`InteractionType.application_command`"
msgstr ":attr:`InteractionType.application_command`"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:11
msgid ":attr:`InteractionType.component`"
msgstr ":attr:`InteractionType.component`"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:12
msgid ":attr:`InteractionType.modal_submit`"
msgstr ":attr:`InteractionType.modal_submit`"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:14
msgid "Indicates whether the deferred message will eventually be ephemeral. This only applies to :attr:`InteractionType.application_command` interactions, or if ``thinking`` is ``True``."
msgstr "遅延メッセージがephemeralになるかどうか。 :attr:`InteractionType.application_command` のインタラクション、または ``thinking`` が ``True`` の場合にのみ適用されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:17
msgid "Indicates whether the deferred type should be :attr:`InteractionResponseType.deferred_channel_message` instead of the default :attr:`InteractionResponseType.deferred_message_update` if both are valid. In UI terms, this is represented as if the bot is thinking of a response. It is your responsibility to eventually send a followup message via :attr:`Interaction.followup` to make this thinking state go away. Application commands (AKA Slash commands) cannot use :attr:`InteractionResponseType.deferred_message_update`."
msgstr "遅延の種類を両方が有効の場合にデフォルトの :attr:`InteractionResponseType.deferred_message_update` ではなく  :attr:`InteractionResponseType.deferred_channel_message` にするか。Discordのアプリ上では考え中として表示されます。 :attr:`Interaction.followup` で考え中の表示を解除できます。アプリケーションコマンド（スラッシュコマンド）は :attr:`InteractionResponseType.deferred_message_update` を使えません。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:24
msgid "Deferring the interaction failed."
msgstr "インタラクションの遅延に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:25
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:36
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:29
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:9
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:10
msgid "This interaction has already been responded to before."
msgstr "既にインタラクションに応答していた場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:3
msgid "Pongs the ping interaction."
msgstr "Pingのインタラクションに応答します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:5
msgid "This should rarely be used."
msgstr "ほとんどの場合使われません。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:7
msgid "Ponging the interaction failed."
msgstr "インタラクションの応答に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:3
msgid "Responds to this interaction by sending a message."
msgstr "インタラクションにメッセージで応答します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:5
msgid "The content of the message to send."
msgstr "送信するメッセージの内容。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:7
msgid "A list of embeds to send with the content. Maximum of 10. This cannot be mixed with the ``embed`` parameter."
msgstr "送信するリッチな埋め込みのリスト。最大10個です。 ``embed`` パラメータと同時に使用できません。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:10
msgid "The rich embed for the content to send. This cannot be mixed with ``embeds`` parameter."
msgstr "送信するリッチな埋め込み。 ``embeds`` パラメータと同時に使用できません。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:13
msgid "The file to upload."
msgstr "アップロードするファイル。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:15
msgid "A list of files to upload. Must be a maximum of 10."
msgstr "アップロードするファイルのリスト。ファイル数は最大で10個まででなくてはいけません。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:17
msgid "Indicates if the message should be sent using text-to-speech."
msgstr "メッセージが音声合成で送信されるべきかどうかを示します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:19
msgid "The view to send with the message."
msgstr "送信するビュー。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:21
msgid "Indicates if the message should only be visible to the user who started the interaction. If a view is sent with an ephemeral message and it has no timeout set then the timeout is set to 15 minutes."
msgstr "メッセージがインタラクションを開始したユーザーだけに表示されるかどうか。もしビューがephemeralなメッセージで送信されている、かつタイムアウトが設定されていない場合、タイムアウトは15分に設定されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:28
msgid "Whether to suppress embeds for the message. This sends the message without any embeds if set to ``True``.  .. versionadded:: 2.0"
msgstr "メッセージのembedを抑制するかどうか。これに ``True`` が設定されている場合、embedなしでメッセージを送信します。 .. versionadded:: 2.0"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:28
msgid "Whether to suppress embeds for the message. This sends the message without any embeds if set to ``True``."
msgstr "メッセージのembedを抑制するかどうか。これが ``True`` に設定されている場合、embedなしでメッセージを送信します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:33
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:12
msgid "Sending the message failed."
msgstr "メッセージの送信に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:34
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``."
msgstr "``embed`` と ``embeds`` または ``file`` と ``files`` の両方を指定した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:3
msgid "Responds to this interaction by editing the original message of a component or modal interaction."
msgstr "コンポーネントまたはモーダルのインタラクションに編集で応答します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:6
msgid "The new content to replace the message with. ``None`` removes the content."
msgstr "現在のメッセージと置き換える新しい内容。``None`` を指定すると内容が削除されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:23
msgid "Controls the mentions being processed in this message. See :meth:`.Message.edit` for more information."
msgstr "このメッセージで処理されるメンションを制御します。詳細は :meth:`.Message.edit` を参照してください。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:28
msgid "You specified both ``embed`` and ``embeds``."
msgstr "``embed`` と ``embeds`` の両方を指定した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:3
msgid "Responds to this interaction by sending a modal."
msgstr "インタラクションにモーダルで応答します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:5
msgid "The modal to send."
msgstr "送信するモーダル。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_modal:8
msgid "Sending the modal failed."
msgstr "モーダルの送信に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:3
msgid "Responds to this interaction by giving the user the choices they can use."
msgstr "インタラクションに補完の選択肢で応答します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:5
msgid "The list of new choices as the user is typing."
msgstr "応答する補完の選択肢。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:8
msgid "Sending the choices failed."
msgstr "選択肢の送信に失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.autocomplete:9
msgid "This interaction cannot respond with autocomplete."
msgstr "このインタラクションに選択肢で応答できない場合。"

#: ../../interactions/api.rst:32
msgid "InteractionMessage"
msgstr "InteractionMessage"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage:1
msgid "Represents the original interaction response message."
msgstr "元のインタラクション応答メッセージを表します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage:3
msgid "This allows you to edit or delete the message associated with the interaction response. To retrieve this object see :meth:`Interaction.original_message`."
msgstr "このオブジェクトでインタラクションの応答のメッセージを編集、または削除できます。このオブジェクトを生成するには  :meth:`Interaction.original_message` を参照して下さい。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage:6
msgid "This inherits from :class:`discord.Message` with changes to :meth:`edit` and :meth:`delete` to work."
msgstr "これは :meth:`edit` と :meth:`delete` が機能するように変更された上で :class:`discord.Message` を継承しています。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:3
msgid "Edits the message."
msgstr "メッセージを編集します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:3
msgid "Adds new files to the end of the message attachments."
msgstr "メッセージの添付ファイルの末尾に新しいファイルを追加します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:7
msgid "New files to add to the message."
msgstr "メッセージに追加する新しいファイル。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.add_files:11
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:11
msgid "Tried to edit a message that isn't yours."
msgstr "自分以外のメッセージを編集しようとした場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:3
msgid "Removes attachments from the message."
msgstr "メッセージの添付ファイルを削除します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.remove_attachments:7
msgid "Attachments to remove from the message."
msgstr "メッセージから削除する添付ファイル。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:3
msgid "Deletes the message."
msgstr "メッセージを削除します。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:5
msgid "If provided, the number of seconds to wait before deleting the message. The waiting is done in the background and deletion failures are ignored."
msgstr "指定された場合、メッセージを削除するまでの待機秒数。待機はバックグラウンドで行われ、削除の失敗は無視されます。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:9
msgid "You do not have proper permissions to delete the message."
msgstr "メッセージを削除するための適切な権限がない場合。"

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:10
msgid "The message was deleted already."
msgstr "メッセージがすでに削除されている場合。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:3
msgid "Adds a reaction to the message."
msgstr "メッセージにリアクションを追加します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:5
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:5
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:5
msgid "The emoji may be a unicode emoji or a custom guild :class:`Emoji`."
msgstr "絵文字はユニコード絵文字かカスタムギルド絵文字の :class:`Emoji` である可能性があります。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:7
msgid "You must have the :attr:`~Permissions.read_message_history` permission to use this. If nobody else has reacted to the message using this emoji, the :attr:`~Permissions.add_reactions` permission is required."
msgstr "これを行うためには、そのチャンネルの :attr:`~Permissions.read_message_history` 権限が必要です。 もし、他の人がその絵文字でリアクションしていない場合、さらに :attr:`~Permissions.add_reactions` 権限が必要です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:13
msgid "``emoji`` parameter is now positional-only."
msgstr "``emoji`` 引数は位置限定引数になりました。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:15
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:11
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:13
msgid "This function will now raise :exc:`TypeError` instead of ``InvalidArgument``."
msgstr "この関数は ``InvalidArgument`` の代わりに :exc:`TypeError` を送出します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:19
msgid "The emoji to react with."
msgstr "リアクションとして追加する絵文字。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:22
msgid "Adding the reaction failed."
msgstr "リアクションの追加に失敗した際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:23
msgid "You do not have the proper permissions to react to the message."
msgstr "リアクションをメッセージを付けるのに必要な権限がない際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:24
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:20
msgid "The emoji you specified was not found."
msgstr "指定された絵文字が見つからなかった際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.add_reaction:25
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:21
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:25
msgid "The emoji parameter is invalid."
msgstr "絵文字のパラメータが無効の場合発生します。"

#: ../../docstring of discord.InteractionMessage.clean_content:1
msgid "A property that returns the content in a \"cleaned up\" manner. This basically means that mentions are transformed into the way the client shows it. e.g. ``<#id>`` will transform into ``#name``."
msgstr "クリーンアップされたメッセージ内容を返すプロパティ。基本的に、これはメンションをクライアントが表示できるようにする、という意味です。例えば、 ``<#id>`` は ``#name`` に変換されます。"

#: ../../docstring of discord.InteractionMessage.clean_content:6
msgid "This will also transform @everyone and @here mentions into non-mentions."
msgstr "また、これは @everyone メンション や @here メンションを、メンション機能の無いメッセージに変換します。"

#: ../../docstring of discord.InteractionMessage.clean_content:11
msgid "This *does not* affect markdown. If you want to escape or remove markdown then use :func:`utils.escape_markdown` or :func:`utils.remove_markdown` respectively, along with this function."
msgstr "これはマークダウンには影響*しません*。マークダウンをエスケープまたは削除したい場合は、この関数とともに :func:`utils.escape_markdown` か :func:`utils.remove_markdown` を使用してください。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:3
msgid "Clears a specific reaction from the message."
msgstr "メッセージから特定のリアクションを消去します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:7
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reactions:5
msgid "You need the :attr:`~Permissions.manage_messages` permission to use this."
msgstr "これを行うには、 :attr:`~Permissions.manage_messages` 権限が必要です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:15
msgid "The emoji to clear."
msgstr "消去された絵文字です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:18
msgid "Clearing the reaction failed."
msgstr "リアクションの消去に失敗した際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reaction:19
msgid "You do not have the proper permissions to clear the reaction."
msgstr "リアクションを消去するのに必要な権限がない場合に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reactions:3
msgid "Removes all the reactions from the message."
msgstr "全てのリアクションをメッセージから消去します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reactions:7
msgid "Removing the reactions failed."
msgstr "リアクションの消去に失敗した際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.clear_reactions:8
msgid "You do not have the proper permissions to remove all the reactions."
msgstr "全てのリアクションを消去するのに必要な権限を持っていない場合に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:3
msgid "Creates a public thread from this message."
msgstr "メッセージからパブリックスレッドを作成します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:5
msgid "You must have :attr:`~discord.Permissions.create_public_threads` in order to create a public thread from a message."
msgstr "メッセージから公開スレッドを作成するには、 :attr:`~discord.Permissions.create_public_threads` 権限が必要です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:8
msgid "The channel this message belongs in must be a :class:`TextChannel`."
msgstr "このメッセージが属するチャンネルは、 :class:`TextChannel` でなければなりません。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:12
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:37
msgid "The name of the thread."
msgstr "スレッドの名前。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:14
msgid "The duration in minutes before a thread is automatically archived for inactivity. If not provided, the channel's default auto archive duration is used."
msgstr "スレッドが非アクティブ時に、自動的にアーカイブされるまでの分単位の長さ。指定しない場合は、チャンネルのデフォルトの自動アーカイブ期間が使用されます。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:17
msgid "Specifies the slowmode rate limit for user in this channel, in seconds. The maximum value possible is `21600`. By default no slowmode rate limit if this is ``None``."
msgstr "このチャンネルの秒単位でのスローモードレート制限。 最大値は `21600` です。デフォルトは ``None`` でこの場合はスローモードレート制限が無しとなります。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:21
msgid "The reason for creating a new thread. Shows up on the audit log."
msgstr "スレッドを作成する理由。監査ログに表示されます。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:24
msgid "You do not have permissions to create a thread."
msgstr "スレッドを作成する権限を持っていない場合発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:25
msgid "Creating the thread failed."
msgstr "スレッドの作成に失敗した場合発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:26
msgid "This message does not have guild info attached."
msgstr "メッセージがギルド情報を持っていない際に発生します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:28
msgid "The created thread."
msgstr "作成されたスレッド"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.create_thread:29
msgid ":class:`.Thread`"
msgstr ":class:`Thread`"

#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.created_at:1
msgid "The message's creation time in UTC."
msgstr "UTCの、メッセージが作成された時刻。"

#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.edited_at:1
msgid "An aware UTC datetime object containing the edited time of the message."
msgstr "メッセージの編集時刻を含む、aware UTC datetime オブジェクト。"

#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.edited_at:3
msgid "Optional[:class:`datetime.datetime`]"
msgstr "Optional[:class:`datetime.datetime`]"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:3
msgid "Fetches the partial message to a full :class:`Message`."
msgstr "部分的なメッセージを完全な :class:`Message` にフェッチします。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:5
msgid "The message was not found."
msgstr "メッセージが見つかりませんでした。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:6
msgid "You do not have the permissions required to get a message."
msgstr "メッセージを取得するために必要な権限がありません。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:7
msgid "Retrieving the message failed."
msgstr "メッセージの取得に失敗しました。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:9
msgid "The full message."
msgstr "メッセージの全容をご紹介します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.fetch:10
msgid ":class:`Message`"
msgstr ":class:`Message`"

#: ../../../discord/interactions.py:docstring of discord.message.Message.is_system:1
msgid ":class:`bool`: Whether the message is a system message."
msgstr ":class:`bool`: メッセージがシステムメッセージであるかどうか。"

#: ../../../discord/interactions.py:docstring of discord.message.Message.is_system:3
msgid "A system message is a message that is constructed entirely by the Discord API in response to something."
msgstr "システムメッセージは、何かの応答としてDiscord APIによって構築されるメッセージです。"

#: ../../../discord/interactions.py:docstring of discord.InteractionMessage.jump_url:1
msgid "Returns a URL that allows the client to jump to this message."
msgstr "クライアントがこのメッセージにジャンプすることのできるURLを返します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:3
msgid "Pins the message."
msgstr "メッセージをピン留めします。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:5
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:5
msgid "You must have the :attr:`~Permissions.manage_messages` permission to do this in a non-private channel context."
msgstr "プライベートなチャンネルでないコンテキストでこれを行うには、 :attr:`~Permissions.manage_messages` パーミッションが必要です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:8
msgid "The reason for pinning the message. Shows up on the audit log.  .. versionadded:: 1.4"
msgstr "メッセージを固定した理由。監査ログに表示されます。 ... versionadded:: 1.4"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:8
msgid "The reason for pinning the message. Shows up on the audit log."
msgstr "メッセージを固定した理由。監査ログに表示されます。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:13
msgid "You do not have permissions to pin the message."
msgstr "メッセージをピン留めする権限がありません。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:14
#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:14
msgid "The message or channel was not found or deleted."
msgstr "メッセージまたはチャンネルが見つからないか、削除されました。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.pin:15
msgid "Pinning the message failed, probably due to the channel     having more than 50 pinned messages."
msgstr "チャンネルにすでに50個ピン留めされたメッセージがあるなどの理由で、メッセージのピン留めに失敗した場合。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:3
msgid "Publishes this message to your announcement channel."
msgstr "このメッセージをアナウンスチャンネルに公開します。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:5
msgid "You must have the :attr:`~Permissions.send_messages` permission to do this."
msgstr "これを行うには :attr:`~Permissions.send_messages` パーミッションが必要です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:7
msgid "If the message is not your own then the :attr:`~Permissions.manage_messages` permission is also needed."
msgstr "もしメッセージが自分自身のものでない場合は、 :attr:`~Permissions.manage_messages` パーミッションも必要です。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:10
msgid "You do not have the proper permissions to publish this message."
msgstr "このメッセージを公開するための適切な許可を持っていません。"

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.publish:11
msgid "Publishing the message failed."
msgstr ""

#: ../../docstring of discord.InteractionMessage.raw_channel_mentions:1
msgid "A property that returns an array of channel IDs matched with the syntax of ``<#channel_id>`` in the message content."
msgstr ""

#: ../../docstring of discord.InteractionMessage.raw_channel_mentions:4
#: ../../docstring of discord.InteractionMessage.raw_mentions:7
#: ../../docstring of discord.InteractionMessage.raw_role_mentions:4
msgid "List[:class:`int`]"
msgstr ""

#: ../../docstring of discord.InteractionMessage.raw_mentions:1
msgid "A property that returns an array of user IDs matched with the syntax of ``<@user_id>`` in the message content."
msgstr ""

#: ../../docstring of discord.InteractionMessage.raw_mentions:4
msgid "This allows you to receive the user IDs of mentioned users even in a private message context."
msgstr ""

#: ../../docstring of discord.InteractionMessage.raw_role_mentions:1
msgid "A property that returns an array of role IDs matched with the syntax of ``<@&role_id>`` in the message content."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:3
msgid "Remove a reaction by the member from the message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:7
msgid "If the reaction is not your own (i.e. ``member`` parameter is not you) then the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:10
msgid "The ``member`` parameter must represent a member and meet the :class:`abc.Snowflake` abc."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:17
msgid "The emoji to remove."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:19
msgid "The member for which to remove the reaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:22
msgid "Removing the reaction failed."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:23
msgid "You do not have the proper permissions to remove the reaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.remove_reaction:24
msgid "The member or emoji you specified was not found."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:3
msgid "A shortcut method to :meth:`.abc.Messageable.send` to reply to the :class:`.Message`."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:8
msgid "This function will now raise :exc:`TypeError` or :exc:`ValueError` instead of ``InvalidArgument``."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:13
msgid "You do not have the proper permissions to send the message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:14
msgid "The ``files`` list is not of the appropriate size"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:15
msgid "You specified both ``file`` and ``files``."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:17
msgid "The message that was sent."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.reply:18
msgid ":class:`.Message`"
msgstr ""

#: ../../docstring of discord.InteractionMessage.system_content:1
msgid "A property that returns the content that is rendered regardless of the :attr:`Message.type`."
msgstr ""

#: ../../docstring of discord.InteractionMessage.system_content:4
msgid "In the case of :attr:`MessageType.default` and :attr:`MessageType.reply`\\, this just returns the regular :attr:`Message.content`. Otherwise this returns an English message denoting the contents of the system message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:1
msgid "Creates a :class:`~discord.MessageReference` from the current message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:5
msgid "Whether replying using the message reference should raise :class:`HTTPException` if the message no longer exists or Discord could not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:5
msgid "Whether replying using the message reference should raise :class:`HTTPException` if the message no longer exists or Discord could not fetch the message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:11
msgid "The reference to this message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.to_reference:12
msgid ":class:`~discord.MessageReference`"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:3
msgid "Unpins the message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:8
msgid "The reason for unpinning the message. Shows up on the audit log.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:8
msgid "The reason for unpinning the message. Shows up on the audit log."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:13
msgid "You do not have permissions to unpin the message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.message.PartialMessage.unpin:15
msgid "Unpinning the message failed."
msgstr ""

#: ../../interactions/api.rst:41
msgid "Component"
msgstr "Component"

#: ../../../discord/components.py:docstring of discord.components.Component:1
msgid "Represents a Discord Bot UI Kit Component."
msgstr "Discord Bot UI Kitのコンポーネント。"

#: ../../../discord/components.py:docstring of discord.components.Component:3
msgid "Currently, the only components supported by Discord are:"
msgstr "現在、Discordでサポートされているコンポーネントは次のとおりです："

#: ../../../discord/components.py:docstring of discord.components.Component:5
msgid ":class:`ActionRow`"
msgstr ":class:`ActionRow`"

#: ../../../discord/components.py:docstring of discord.components.Component:6
msgid ":class:`Button`"
msgstr ":class:`Button`"

#: ../../../discord/components.py:docstring of discord.components.Component:7
msgid ":class:`SelectMenu`"
msgstr ":class:`SelectMenu`"

#: ../../../discord/components.py:docstring of discord.components.Component:9
msgid "This class is abstract and cannot be instantiated."
msgstr "このクラスはabstractでインスタンス化できません。"

#: ../../../discord/components.py:docstring of discord.components.Component:15
#: ../../../discord/components.py:docstring of discord.components.ActionRow:11
msgid "The type of component."
msgstr "コンポーネントの種類。"

#: ../../../discord/components.py:docstring of discord.components.Component:17
#: ../../../discord/components.py:docstring of discord.components.ActionRow:13
msgid ":class:`ComponentType`"
msgstr ":class:`ComponentType`"

#: ../../interactions/api.rst:49
msgid "ActionRow"
msgstr "ActionRow"

#: ../../../discord/components.py:docstring of discord.components.ActionRow:1
msgid "Represents a Discord Bot UI Kit Action Row."
msgstr "Discord Bot UI KitのAction Row。"

#: ../../../discord/components.py:docstring of discord.components.ActionRow:3
msgid "This is a component that holds up to 5 children components in a row."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:5
#: ../../../discord/components.py:docstring of discord.components.Button:3
msgid "This inherits from :class:`Component`."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:17
msgid "The children components that this holds, if any."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:19
msgid "List[:class:`Component`]"
msgstr "List[:class:`Component`]"

#: ../../interactions/api.rst:57
#: ../../interactions/api.rst:381
msgid "Button"
msgstr "Button"

#: ../../../discord/components.py:docstring of discord.components.Button:1
msgid "Represents a button from the Discord Bot UI Kit."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:7
msgid "The user constructible and usable type to create a button is :class:`discord.ui.Button` not this one."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:14
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:5
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.style:1
msgid "The style of the button."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:16
msgid ":class:`.ButtonStyle`"
msgstr ":class:`.ButtonStyle`"

#: ../../../discord/components.py:docstring of discord.components.Button:20
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:7
msgid "The ID of the button that gets received during an interaction. If this button is for a URL, it does not have a custom ID."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:23
#: ../../../discord/components.py:docstring of discord.components.Button:29
#: ../../../discord/components.py:docstring of discord.components.Button:41
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:17
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:23
#: ../../../discord/components.py:docstring of discord.components.TextInput:13
#: ../../../discord/components.py:docstring of discord.components.TextInput:31
#: ../../../discord/components.py:docstring of discord.components.TextInput:37
#: ../../../discord/components.py:docstring of discord.TextInput.default:5
#: ../../../discord/components.py:docstring of discord.components.SelectOption:27
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:5
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.url:3
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.label:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.placeholder:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.value:3
msgid "Optional[:class:`str`]"
msgstr "Optional[:class:`str`]"

#: ../../../discord/components.py:docstring of discord.components.Button:27
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:10
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.url:1
msgid "The URL this button sends you to."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:33
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:12
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.disabled:1
msgid "Whether the button is disabled or not."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:35
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:49
#: ../../../discord/components.py:docstring of discord.components.TextInput:43
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:27
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:64
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:70
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:77
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:27
#: ../../../discord/components.py:docstring of discord.components.SelectOption:39
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:20
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:8
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:20
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.wait:8
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.disabled:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.disabled:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.required:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:22
#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:40
msgid ":class:`bool`"
msgstr ":class:`bool`"

#: ../../../discord/components.py:docstring of discord.components.Button:39
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:14
#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:15
msgid "The label of the button, if any."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:45
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:16
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.emoji:1
msgid "The emoji of the button, if available."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:47
msgid "Optional[:class:`PartialEmoji`]"
msgstr "Optional[:class:`PartialEmoji`]"

#: ../../interactions/api.rst:66
msgid "SelectMenu"
msgstr "SelectMenu"

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:1
msgid "Represents a select menu from the Discord Bot UI Kit."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:3
msgid "A select menu is functionally the same as a dropdown, however on mobile it renders a bit differently."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:8
msgid "The user constructible and usable type to create a select menu is :class:`discord.ui.Select` not this one."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:15
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.custom_id:1
msgid "The ID of the select menu that gets received during an interaction."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:21
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:12
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.placeholder:1
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:10
msgid "The placeholder text that is shown if nothing is selected, if any."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:27
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:14
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:21
msgid "The minimum number of items that must be chosen for this select menu. Defaults to 1 and must be between 1 and 25."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:34
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:17
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:24
msgid "The maximum number of items that must be chosen for this select menu. Defaults to 1 and must be between 1 and 25."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:41
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:20
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.options:1
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:27
msgid "A list of options that can be selected in this menu."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:43
msgid "List[:class:`SelectOption`]"
msgstr "List[:class:`SelectOption`]"

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:47
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:22
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.disabled:1
msgid "Whether the select is disabled or not."
msgstr ""

#: ../../interactions/api.rst:76
#: ../../interactions/api.rst:403
msgid "TextInput"
msgstr "TextInput"

#: ../../../discord/components.py:docstring of discord.components.TextInput:1
msgid "Represents a text input from the Discord Bot UI Kit."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:4
msgid "The user constructible and usable type to create a text input is :class:`discord.ui.TextInput` not this one."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:11
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.custom_id:1
msgid "The ID of the text input that gets received during an interaction."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:17
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:5
msgid "The label to display above the text input."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:23
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:10
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.style:1
msgid "The style of the text input."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:25
msgid ":class:`TextStyle`"
msgstr ":class:`TextStyle`"

#: ../../../discord/components.py:docstring of discord.components.TextInput:29
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:12
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.placeholder:1
msgid "The placeholder text to display when the text input is empty."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:35
#: ../../../discord/components.py:docstring of discord.TextInput.default:1
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:14
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.default:1
msgid "The default value of the text input."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:41
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:16
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.required:1
msgid "Whether the text input is required."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.TextInput:47
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:18
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.min_length:1
msgid "The minimum length of the text input."
msgstr "テキスト入力の最小の長さ。"

#: ../../../discord/components.py:docstring of discord.components.TextInput:53
#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:20
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.max_length:1
msgid "The maximum length of the text input."
msgstr "テキスト入力の最大の長さ。"

#: ../../../discord/components.py:docstring of discord.TextInput.default:3
msgid "This is an alias to :attr:`value`."
msgstr "これは :attr:`value` のエイリアスです。"

#: ../../interactions/api.rst:85
msgid "AppCommand"
msgstr "AppCommand"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:1
msgid "Represents a application command."
msgstr "アプリケーションコマンドを表します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:3
msgid "In common parlance this is referred to as a \"Slash Command\" or a \"Context Menu Command\"."
msgstr "一般的な用語では、これは「スラッシュコマンド」または「コンテキストメニューコマンド」と呼ばれます。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:12
msgid "Checks if two application commands are equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:16
msgid "Checks if two application commands are not equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:20
msgid "Returns the application command's hash."
msgstr "アプリケーションコマンドのハッシュを返します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:24
msgid "Returns the application command's name."
msgstr "アプリケーションコマンドの名前を返します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:28
msgid "The application command's ID."
msgstr "アプリケーションコマンドのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:34
msgid "The application command's application's ID."
msgstr "アプリケーションコマンドのアプリケーションのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:40
msgid "The application command's type."
msgstr "アプリケーションコマンドのタイプ。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:42
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:24
msgid ":class:`~discord.AppCommandType`"
msgstr ":class:`~discord.AppCommandType`"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:46
msgid "The application command's name."
msgstr "アプリケーションコマンドの名前。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommand:52
msgid "The application command's description."
msgstr "アプリケーションコマンドの説明。"

#: ../../interactions/api.rst:93
msgid "AppCommandGroup"
msgstr "AppCommandGroup"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:1
msgid "Represents a application command subcommand."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:7
msgid "The type of subcommand."
msgstr "サブコマンドのタイプ。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:9
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:9
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:24
msgid ":class:`~discord.AppCommandOptionType`"
msgstr ":class:`~discord.AppCommandOptionType`"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:13
msgid "The name of the subcommand."
msgstr "サブコマンドの名前。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:19
msgid "The description of the subcommand."
msgstr "サブコマンドの説明。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:25
msgid "Whether the subcommand is required."
msgstr "サブコマンドが必要かどうか。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:31
msgid "A list of choices for the command to choose from for this subcommand."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:33
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:33
msgid "List[:class:`Choice`]"
msgstr "List[:class:`Choice`]"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:37
msgid "A list of arguments."
msgstr "引数のリスト。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:39
msgid "List[:class:`Argument`]"
msgstr "List[:class:`Argument`]"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:43
msgid "The parent application command."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandGroup:45
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:39
msgid "Union[:class:`AppCommand`, :class:`AppCommandGroup`]"
msgstr "Union[:class:`AppCommand`, :class:`AppCommandGroup`]"

#: ../../interactions/api.rst:101
msgid "AppCommandChannel"
msgstr "AppCommandChannel"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:1
msgid "Represents an application command partially resolved channel object."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:9
msgid "Checks if two channels are equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:13
msgid "Checks if two channels are not equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:17
msgid "Returns the channel's hash."
msgstr "チャンネルのハッシュ値を返します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:21
msgid "Returns the channel's name."
msgstr "チャンネルの名前を返します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:25
msgid "The ID of the channel."
msgstr "チャンネルのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:31
msgid "The type of channel."
msgstr "チャンネルの種類。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:33
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:33
msgid ":class:`~discord.ChannelType`"
msgstr ":class:`~discord.ChannelType`"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:37
msgid "The name of the channel."
msgstr "チャンネルの名前。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:43
msgid "The resolved permissions of the user who invoked the application command in that channel."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:46
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:52
msgid ":class:`~discord.Permissions`"
msgstr ":class:`~discord.Permissions`"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel:50
msgid "The guild ID this channel belongs to."
msgstr "このチャンネルが存在するギルドのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.guild:1
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.guild:1
msgid "The channel's guild, from cache, if found."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.guild:3
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.guild:3
msgid "Optional[:class:`~discord.Guild`]"
msgstr "Optional[:class:`~discord.Guild`]"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.resolve:1
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.resolve:1
msgid "Resolves the application command channel to the appropriate channel from cache if found."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.resolve:4
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.resolve:4
msgid "The resolved guild channel or ``None`` if not found in cache."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.resolve:5
#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.resolve:5
msgid "Optional[:class:`.abc.GuildChannel`]"
msgstr "Optional[:class:`.abc.GuildChannel`]"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:3
msgid "Fetches the partial channel to a full :class:`.abc.GuildChannel`."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:5
msgid "The channel was not found."
msgstr "チャンネルが見つかりませんでした。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:6
msgid "You do not have the permissions required to get a channel."
msgstr "チャンネルを取得するために必要な権限がない場合。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:7
msgid "Retrieving the channel failed."
msgstr "チャンネルの取得に失敗した時。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:9
msgid "The full channel."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandChannel.fetch:10
msgid ":class:`.abc.GuildChannel`"
msgstr ":class:`.abc.GuildChannel`"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.mention:1
msgid "The string that allows you to mention the channel."
msgstr "チャンネルにメンションできる文字列。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandChannel.created_at:1
msgid "An aware timestamp of when this channel was created in UTC."
msgstr ""

#: ../../interactions/api.rst:109
msgid "AppCommandThread"
msgstr "アプリコマンドスレッド"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:1
msgid "Represents an application command partially resolved thread object."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:9
msgid "Checks if two thread are equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:13
msgid "Checks if two thread are not equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:17
msgid "Returns the thread's hash."
msgstr "スレッドのハッシュを返します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:21
msgid "Returns the thread's name."
msgstr "スレッドの名前を返します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:25
msgid "The ID of the thread."
msgstr "スレッドのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:31
msgid "The type of thread."
msgstr "スレッドの種類。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:43
msgid "The parent text channel ID this thread belongs to."
msgstr "このスレッドが属する親テキストチャンネルのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:49
msgid "The resolved permissions of the user who invoked the application command in that thread."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:56
msgid "The guild ID this thread belongs to."
msgstr "このスレッドが属するギルドのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:62
msgid "Whether the thread is archived."
msgstr "スレッドがアーカイブされているかどうか。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:68
msgid "Whether the thread is locked."
msgstr "スレッドがロックされているかどうか。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:74
msgid "Whether non-moderators can add other non-moderators to this thread. This is always ``True`` for public threads."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:81
msgid "The user's ID that archived this thread."
msgstr "このスレッドをアーカイブしたユーザーのID。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:87
msgid "The duration in minutes until the thread is automatically archived due to inactivity. Usually a value of 60, 1440, 4320 and 10080."
msgstr "非アクティブのスレッドが自動的にアーカイブされるまでの分数です。通常は60、1440、4320、10080の値を設定します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread:94
msgid "An aware timestamp of when the thread's archived status was last updated in UTC."
msgstr "スレッドのアーカイブ状態が最後に更新されたときのawareなタイムスタンプ。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.parent:1
msgid "The parent channel this thread belongs to."
msgstr "このスレッドが属する親チャンネル。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.parent:3
msgid "Optional[:class:`~discord.TextChannel`]"
msgstr "Optional[:class:`~discord.TextChannel`]"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.mention:1
msgid "The string that allows you to mention the thread."
msgstr "スレッドに言及できるようにするための文字列。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.created_at:1
msgid "An aware timestamp of when the thread was created in UTC."
msgstr "UTCで表されたスレッドが作成されたときのタイムスタンプ。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.AppCommandThread.created_at:5
msgid "This timestamp only exists for threads created after 9 January 2022, otherwise returns ``None``."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:3
msgid "Fetches the partial channel to a full :class:`~discord.Thread`."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:5
msgid "The thread was not found."
msgstr "スレッドが見つかりませんでした。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:6
msgid "You do not have the permissions required to get a thread."
msgstr "スレッドを取得するために必要な権限がありません。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:7
msgid "Retrieving the thread failed."
msgstr "スレッドの取得に失敗しました。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:9
msgid "The full thread."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.AppCommandThread.fetch:10
msgid ":class:`~discord.Thread`"
msgstr ":class:`~discord.Thread`"

#: ../../interactions/api.rst:117
msgid "Argument"
msgstr "Argument"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:1
msgid "Represents a application command argument."
msgstr "アプリケーションコマンドの引数を表します。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:7
msgid "The type of argument."
msgstr "引数のタイプ。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:13
msgid "The name of the argument."
msgstr "引数の名前。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:19
msgid "The description of the argument."
msgstr "引数の説明。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:25
msgid "Whether the argument is required."
msgstr "引数が入力必須かどうか。"

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:31
msgid "A list of choices for the command to choose from for this argument."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Argument:37
msgid "The parent application command that has this argument."
msgstr ""

#: ../../interactions/api.rst:125
msgid "Data Classes"
msgstr "データクラス"

#: ../../interactions/api.rst:127
msgid "Similar to :ref:`discord_api_data`, these can be received and constructed by users."
msgstr ""

#: ../../interactions/api.rst:130
msgid "SelectOption"
msgstr "SelectOption"

#: ../../../discord/components.py:docstring of discord.components.SelectOption:1
msgid "Represents a select menu's option."
msgstr "セレクトメニューのオプションを表します。"

#: ../../../discord/components.py:docstring of discord.components.SelectOption:3
msgid "These can be created by users."
msgstr "これらはユーザーによって作成することができます。"

#: ../../../discord/components.py:docstring of discord.components.SelectOption:9
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:6
msgid "The label of the option. This is displayed to users. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:16
msgid "The value of the option. This is not displayed to users. If not provided when constructed then it defaults to the label. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:24
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:12
msgid "An additional description of the option, if any. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:31
msgid "The emoji of the option, if available."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:33
msgid "Optional[Union[:class:`str`, :class:`Emoji`, :class:`PartialEmoji`]]"
msgstr "Optional[Union[:class:`str`, :class:`Emoji`, :class:`PartialEmoji`]]"

#: ../../../discord/components.py:docstring of discord.components.SelectOption:37
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:18
msgid "Whether this option is selected by default."
msgstr ""

#: ../../interactions/api.rst:138
msgid "Choice"
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:1
msgid "Represents an application command argument choice."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:9
msgid "Checks if two choices are equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:13
msgid "Checks if two choices are not equal."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:17
msgid "Returns the choice's hash."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:19
msgid "The name of the choice. Used for display purposes."
msgstr ""

#: ../../../discord/app_commands/models.py:docstring of discord.app_commands.models.Choice:21
msgid "The value of the choice."
msgstr ""

#: ../../interactions/api.rst:147
msgid "Enumerations"
msgstr ""

#: ../../interactions/api.rst:151
msgid "Specifies the type of :class:`Interaction`."
msgstr ""

#: ../../interactions/api.rst:157
msgid "Represents Discord pinging to see if the interaction response server is alive."
msgstr ""

#: ../../interactions/api.rst:160
msgid "Represents a slash command interaction."
msgstr ""

#: ../../interactions/api.rst:163
msgid "Represents a component based interaction, i.e. using the Discord Bot UI Kit."
msgstr ""

#: ../../interactions/api.rst:166
msgid "Represents an auto complete interaction."
msgstr ""

#: ../../interactions/api.rst:169
msgid "Represents submission of a modal interaction."
msgstr ""

#: ../../interactions/api.rst:173
msgid "Specifies the response type for the interaction."
msgstr ""

#: ../../interactions/api.rst:179
msgid "Pongs the interaction when given a ping."
msgstr ""

#: ../../interactions/api.rst:181
msgid "See also :meth:`InteractionResponse.pong`"
msgstr ""

#: ../../interactions/api.rst:184
msgid "Respond to the interaction with a message."
msgstr ""

#: ../../interactions/api.rst:186
msgid "See also :meth:`InteractionResponse.send_message`"
msgstr ""

#: ../../interactions/api.rst:189
msgid "Responds to the interaction with a message at a later time."
msgstr ""

#: ../../interactions/api.rst:191
#: ../../interactions/api.rst:197
msgid "See also :meth:`InteractionResponse.defer`"
msgstr ""

#: ../../interactions/api.rst:194
msgid "Acknowledges the component interaction with a promise that the message will update later (though there is no need to actually update the message)."
msgstr ""

#: ../../interactions/api.rst:200
msgid "Responds to the interaction by editing the message."
msgstr ""

#: ../../interactions/api.rst:202
msgid "See also :meth:`InteractionResponse.edit_message`"
msgstr ""

#: ../../interactions/api.rst:205
msgid "Responds to the autocomplete interaction with suggested choices."
msgstr ""

#: ../../interactions/api.rst:207
msgid "See also :meth:`InteractionResponse.autocomplete`"
msgstr ""

#: ../../interactions/api.rst:210
msgid "Responds to the interaction with a modal."
msgstr ""

#: ../../interactions/api.rst:212
msgid "See also :meth:`InteractionResponse.send_modal`"
msgstr ""

#: ../../interactions/api.rst:216
msgid "Represents the component type of a component."
msgstr "コンポーネントのコンポーネントタイプを表します。"

#: ../../interactions/api.rst:222
msgid "Represents the group component which holds different components in a row."
msgstr ""

#: ../../interactions/api.rst:225
msgid "Represents a button component."
msgstr "ボタンコンポーネントを表します。"

#: ../../interactions/api.rst:228
msgid "Represents a select component."
msgstr "セレクトコンポーネントを表します。"

#: ../../interactions/api.rst:232
msgid "Represents a text box component."
msgstr "テキストボックスコンポーネントを表します。"

#: ../../interactions/api.rst:236
msgid "Represents the style of the button component."
msgstr "ボタンコンポーネントのスタイルを表します。"

#: ../../interactions/api.rst:242
msgid "Represents a blurple button for the primary action."
msgstr ""

#: ../../interactions/api.rst:245
msgid "Represents a grey button for the secondary action."
msgstr "2回目のアクションを意味する灰色のボタンを表します。"

#: ../../interactions/api.rst:248
msgid "Represents a green button for a successful action."
msgstr "成功したアクションを意味する緑色のボタンを表します。"

#: ../../interactions/api.rst:251
msgid "Represents a red button for a dangerous action."
msgstr "危険な操作を意味する赤いボタンを表します。"

#: ../../interactions/api.rst:254
msgid "Represents a link button."
msgstr "リンクボタンを表します。"

#: ../../interactions/api.rst:258
msgid "An alias for :attr:`primary`."
msgstr ":attr:`primary` のエイリアス。"

#: ../../interactions/api.rst:261
#: ../../interactions/api.rst:264
msgid "An alias for :attr:`secondary`."
msgstr ":attr:`secondary` のエイリアス。"

#: ../../interactions/api.rst:267
msgid "An alias for :attr:`success`."
msgstr ":attr:`success` のエイリアス。"

#: ../../interactions/api.rst:270
msgid "An alias for :attr:`danger`."
msgstr ":attr:`danger` のエイリアス。"

#: ../../interactions/api.rst:273
msgid "An alias for :attr:`link`."
msgstr ":attr:`link` のエイリアス。"

#: ../../interactions/api.rst:277
msgid "Represents the style of the text box component."
msgstr ""

#: ../../interactions/api.rst:283
msgid "Represents a short text box."
msgstr ""

#: ../../interactions/api.rst:286
msgid "Represents a long form text box."
msgstr ""

#: ../../interactions/api.rst:289
msgid "An alias for :attr:`paragraph`."
msgstr ":attr:`paragraph` のエイリアス。"

#: ../../interactions/api.rst:293
msgid "The application command's option type. This is usually the type of parameter an application command takes."
msgstr ""

#: ../../interactions/api.rst:299
msgid "A subcommand."
msgstr "サブコマンドです。"

#: ../../interactions/api.rst:302
msgid "A subcommand group."
msgstr "サブコマンドグループです。"

#: ../../interactions/api.rst:305
msgid "A string parameter."
msgstr "文字列パラメータです。"

#: ../../interactions/api.rst:308
msgid "A integer parameter."
msgstr "整数パラメータです。"

#: ../../interactions/api.rst:311
msgid "A boolean parameter."
msgstr "真偽値パラメータです。"

#: ../../interactions/api.rst:314
msgid "A user parameter."
msgstr "ユーザーパラメータです。"

#: ../../interactions/api.rst:317
msgid "A channel parameter."
msgstr "チャンネルパラメータです。"

#: ../../interactions/api.rst:320
msgid "A role parameter."
msgstr "ロールパラメータです。"

#: ../../interactions/api.rst:323
msgid "A mentionable parameter."
msgstr "言及可能なパラメータです。"

#: ../../interactions/api.rst:326
msgid "A number parameter."
msgstr "番号のパラメータです。"

#: ../../interactions/api.rst:329
msgid "An attachment parameter."
msgstr "添付ファイルのパラメータです。"

#: ../../interactions/api.rst:333
msgid "The type of application command."
msgstr "アプリケーションコマンドの種類です。"

#: ../../interactions/api.rst:339
msgid "A slash command."
msgstr "スラッシュコマンドです。"

#: ../../interactions/api.rst:342
msgid "A user context menu command."
msgstr "ユーザーコンテキストメニューコマンドです。"

#: ../../interactions/api.rst:345
msgid "A message context menu command."
msgstr "メッセージコンテキストメニューコマンドです。"

#: ../../interactions/api.rst:350
msgid "Bot UI Kit"
msgstr "Bot UIキット"

#: ../../interactions/api.rst:352
msgid "The library has helpers to aid create component-based UIs. These are all in the ``discord.ui`` package."
msgstr ""

#: ../../interactions/api.rst:356
msgid "View"
msgstr "View"

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:1
msgid "Represents a UI view."
msgstr "UIビューを表します。"

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:3
msgid "This object must be inherited to create a UI within Discord."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:7
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:22
msgid "Timeout in seconds from last interaction with the UI before no longer accepting input. If ``None`` then there is no timeout."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:13
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:37
msgid "The list of children attached to this view."
msgstr "このビューに添付された子のリスト。"

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:15
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:39
msgid "List[:class:`Item`]"
msgstr "List[:class:`Item`]"

#: ../../../discord/ui/view.py:docstring of discord.ui.View.timeout:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.Modal.timeout:1
msgid "The timeout in seconds from last interaction with the UI before no longer accepting input. If ``None`` then there is no timeout."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.View.timeout:4
#: ../../../discord/ui/modal.py:docstring of discord.ui.Modal.timeout:4
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:8
msgid "Optional[:class:`float`]"
msgstr "Optional[:class:`float`]"

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:1
msgid "Converts a message's components into a :class:`View`."
msgstr "メッセージのコンポーネントを :class:`View` に変換します。"

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:3
msgid "The :attr:`.Message.components` of a message are read-only and separate types from those in the ``discord.ui`` namespace. In order to modify and edit message components they must be converted into a :class:`View` first."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:8
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:8
msgid "The message with components to convert into a view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:10
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:10
msgid "The timeout of the converted view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:13
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:13
msgid "The converted view. This always returns a :class:`View` and not one of its subclasses."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:15
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.from_message:15
msgid ":class:`View`"
msgstr ":class:`View`"

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:1
msgid "Adds an item to the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:3
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:3
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.clear_items:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.clear_items:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.remove_item:3
msgid "This function returns the class instance to allow for fluent-style chaining."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:6
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:6
msgid "The item to add to the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:9
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:9
msgid "An :class:`Item` was not passed."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:10
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.add_item:10
msgid "Maximum number of children has been exceeded (25)     or the row the item is trying to be added to is full."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.remove_item:1
msgid "Removes an item from the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:6
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.remove_item:6
msgid "The item to remove from the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.clear_items:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.clear_items:1
msgid "Removes all items from the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:3
msgid "A callback that is called when an interaction happens within the view that checks whether the view should process item callbacks for the interaction."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:6
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:6
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:6
msgid "This is useful to override if, for example, you want to ensure that the interaction author is a given user."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:9
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:9
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:9
msgid "The default implementation of this returns ``True``."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:13
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:13
msgid "If an exception occurs within the body then the check is considered a failure and :meth:`on_error` is called."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:16
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:16
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:18
msgid "The interaction that occurred."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:19
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.interaction_check:19
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:21
msgid "Whether the view children's callbacks should be called."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_timeout:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.on_timeout:3
msgid "A callback that is called when a view's timeout elapses without being explicitly stopped."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:3
msgid "A callback that is called when an item's callback or :meth:`interaction_check` fails with an error."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:6
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_error:6
msgid "The default implementation prints the traceback to stderr."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:8
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_error:8
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:12
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:11
msgid "The exception that was raised."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:10
msgid "The item that failed the dispatch."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:12
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_error:10
msgid "The interaction that led to the failure."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.stop:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.stop:1
msgid "Stops listening to interaction events from this view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.stop:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.stop:3
msgid "This operation cannot be undone."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_finished:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.is_finished:1
msgid ":class:`bool`: Whether the view has finished interacting."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_dispatching:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.is_dispatching:1
msgid ":class:`bool`: Whether the view has been added for dispatching purposes."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_persistent:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.is_persistent:1
msgid ":class:`bool`: Whether the view is set up as persistent."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_persistent:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.is_persistent:3
msgid "A persistent view has all their components with a set ``custom_id`` and a :attr:`timeout` set to ``None``."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:1
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.wait:1
msgid "Waits until the view has finished interacting."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:3
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.wait:3
msgid "A view is considered finished when :meth:`stop` is called or it times out."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:6
#: ../../../discord/ui/modal.py:docstring of discord.ui.view.View.wait:6
msgid "If ``True``, then the view timed out. If ``False`` then the view finished normally."
msgstr ""

#: ../../interactions/api.rst:364
msgid "Modal"
msgstr "Modal"

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:1
msgid "Represents a UI modal."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:3
msgid "This object must be inherited to create a modal popup window within discord."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:8
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:8
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.context_menu:8
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:11
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:16
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:21
#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:16
msgid "Examples"
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:20
#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:31
msgid "The title of the modal."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:25
msgid "The ID of the modal that gets received during an interaction. If not given then one is generated for you."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal:43
msgid "The ID of the modal that gets received during an interaction."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_submit:3
msgid "Called when the modal is submitted."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_submit:5
msgid "The interaction that submitted this modal."
msgstr ""

#: ../../../discord/ui/modal.py:docstring of discord.ui.modal.Modal.on_error:3
msgid "A callback that is called when :meth:`on_submit` fails with an error."
msgstr ""

#: ../../interactions/api.rst:373
msgid "Item"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:1
msgid "Represents the base UI item that all UI components inherit from."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:3
msgid "The current UI items supported are:"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:5
msgid ":class:`discord.ui.Button`"
msgstr ":class:`discord.ui.Button`"

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:6
msgid ":class:`discord.ui.Select`"
msgstr ":class:`discord.ui.Select`"

#: ../../../discord/ui/item.py:docstring of discord.ui.Item.view:1
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.view:1
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.view:1
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.view:1
msgid "The underlying view for this item."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.Item.view:3
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.view:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.view:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.view:3
msgid "Optional[:class:`View`]"
msgstr "Optional[:class:`View`]"

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:3
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:3
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:3
#: ../../../discord/ui/text_input.py:docstring of discord.ui.item.Item.callback:3
msgid "The callback associated with this UI item."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:5
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:5
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:5
#: ../../../discord/ui/text_input.py:docstring of discord.ui.item.Item.callback:5
msgid "This can be overridden by subclasses."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:7
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:7
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:7
#: ../../../discord/ui/text_input.py:docstring of discord.ui.item.Item.callback:7
msgid "The interaction that triggered this UI item."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:1
msgid "Represents a UI button."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:18
#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:27
msgid "The relative row this button belongs to. A Discord component can only have 5 rows. By default, items are arranged automatically into those 5 rows. If you'd like to control the relative positioning of the row then passing an index is advised. For example, row=1 will show up before row=2. Defaults to ``None``, which is automatic ordering. The row number must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.style:3
msgid ":class:`discord.ButtonStyle`"
msgstr ":class:`discord.ButtonStyle`"

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:1
msgid "The ID of the button that gets received during an interaction."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:3
msgid "If this button is for a URL, it does not have a custom ID."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.label:1
msgid "The label of the button, if available."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.emoji:3
msgid "Optional[:class:`.PartialEmoji`]"
msgstr "Optional[:class:`.PartialEmoji`]"

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:1
msgid "A decorator that attaches a button to a component."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:3
msgid "The function being decorated should have three parameters, ``self`` representing the :class:`discord.ui.View`, the :class:`discord.Interaction` you receive and the :class:`discord.ui.Button` being pressed."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:9
msgid "Buttons with a URL cannot be created with this function. Consider creating a :class:`Button` manually instead. This is because buttons with a URL do not have a callback associated with them since Discord does not do any processing with it."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:17
msgid "The ID of the button that gets received during an interaction. It is recommended not to set this parameter to prevent conflicts."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:20
msgid "The style of the button. Defaults to :attr:`.ButtonStyle.grey`."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:22
msgid "Whether the button is disabled or not. Defaults to ``False``."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:24
msgid "The emoji of the button. This can be in string form or a :class:`.PartialEmoji` or a full :class:`.Emoji`."
msgstr ""

#: ../../interactions/api.rst:392
msgid "Select"
msgstr "Select"

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:1
msgid "Represents a UI select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:3
msgid "This is usually represented as a drop down menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:5
msgid "In order to get the selected items that the user has chosen, use :attr:`Select.values`."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:9
msgid "The ID of the select menu that gets received during an interaction. If not given then one is generated for you."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:24
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:15
msgid "The relative row this select menu belongs to. A Discord component can only have 5 rows. By default, items are arranged automatically into those 5 rows. If you'd like to control the relative positioning of the row then passing an index is advised. For example, row=1 will show up before row=2. Defaults to ``None``, which is automatic ordering. The row number must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.min_values:1
msgid "The minimum number of items that must be chosen for this select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.max_values:1
msgid "The maximum number of items that must be chosen for this select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.options:3
msgid "List[:class:`discord.SelectOption`]"
msgstr "List[:class:`discord.SelectOption`]"

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:1
msgid "Adds an option to the select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:3
msgid "To append a pre-existing :class:`discord.SelectOption` use the :meth:`append_option` method instead."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:9
msgid "The value of the option. This is not displayed to users. If not given, defaults to the label. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:15
msgid "The emoji of the option, if available. This can either be a string representing the custom or unicode emoji or an instance of :class:`.PartialEmoji` or :class:`.Emoji`."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:21
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:6
msgid "The number of options exceeds 25."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:1
msgid "Appends an option to the select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:3
msgid "The option to append to the select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.values:1
msgid "A list of values that have been selected by the user."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.values:3
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingPermissions:12
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.BotMissingPermissions:12
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:18
msgid "List[:class:`str`]"
msgstr "List[:class:`str`]"

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:1
msgid "A decorator that attaches a select menu to a component."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:3
msgid "The function being decorated should have three parameters, ``self`` representing the :class:`discord.ui.View`, the :class:`discord.Interaction` you receive and the :class:`discord.ui.Select` being used."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:7
msgid "In order to get the selected items that the user has chosen within the callback use :attr:`Select.values`."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:12
msgid "The ID of the select menu that gets received during an interaction. It is recommended not to set this parameter to prevent conflicts."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:29
msgid "Whether the select is disabled or not. Defaults to ``False``."
msgstr ""

#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:1
msgid "Represents a UI text input."
msgstr ""

#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:7
msgid "The ID of the text input that gets received during an interaction. If not given then one is generated for you."
msgstr ""

#: ../../../discord/ui/text_input.py:docstring of discord.ui.text_input.TextInput:22
msgid "The relative row this text input belongs to. A Discord component can only have 5 rows. By default, items are arranged automatically into those 5 rows. If you'd like to control the relative positioning of the row then passing an index is advised. For example, row=1 will show up before row=2. Defaults to ``None``, which is automatic ordering. The row number must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.value:1
msgid "The value of the text input."
msgstr ""

#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.label:1
msgid "The label of the text input."
msgstr ""

#: ../../../discord/ui/text_input.py:docstring of discord.ui.TextInput.style:3
msgid ":class:`discord.TextStyle`"
msgstr ":class:`discord.TextStyle`"

#: ../../interactions/api.rst:414
msgid "Application Commands"
msgstr ""

#: ../../interactions/api.rst:416
msgid "The library has helpers to aid in creation of application commands. These are all in the ``discord.app_commands`` package."
msgstr ""

#: ../../interactions/api.rst:419
msgid "CommandTree"
msgstr "CommandTree"

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree:1
msgid "Represents a container that holds application command information."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree:3
msgid "The client instance to get application command information from."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:3
msgid "Fetches the application's current commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:5
msgid "If no guild is passed then global commands are fetched, otherwise the guild's commands are fetched instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:10
msgid "This includes context menu commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:12
msgid "The guild to fetch the commands from. If not passed then global commands are fetched instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:16
msgid "Fetching the commands failed."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:17
msgid "The application ID could not be found."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:19
msgid "The application's commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.fetch_commands:20
msgid "List[:class:`~discord.app_commands.AppCommand`]"
msgstr "List[:class:`~discord.app_commands.AppCommand`]"

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:1
msgid "Copies all global commands to the specified guild."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:3
msgid "This method is mainly available for development purposes, as it allows you to copy your global commands over to a testing guild easily and prevent waiting an hour for the propagation."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:7
msgid "Note that this method will *override* pre-existing guild commands that would conflict."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:9
msgid "The guild to copy the commands to."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.copy_global_to:12
msgid "The maximum number of commands was reached for that guild.     This is currently 100 for slash commands and 5 for context menu commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:1
msgid "Adds an application command to the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:3
msgid "This only adds the command locally -- in order to sync the commands and enable them in the client, :meth:`sync` must be called."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:6
msgid "The root parent of the command is added regardless of the type passed."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:8
msgid "The application command or group to add."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:10
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.command:10
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:23
msgid "The guild to add the command to. If not given then it becomes a global command instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:13
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.command:13
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:26
msgid "The list of guilds to add the command to. This cannot be mixed with the ``guild`` parameter. If no guilds are given at all then it becomes a global command instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:17
msgid "Whether to override a command with the same name. If ``False`` an exception is raised. Default is ``False``."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:21
msgid "The command was already registered and no override was specified."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:22
msgid "The application command passed is not a valid application command.     Or, ``guild`` and ``guilds`` were both given."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.add_command:23
msgid "The maximum number of commands was reached globally or for that guild.     This is currently 100 for slash commands and 5 for context menu commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:1
msgid "Removes an application command from the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:3
msgid "This only removes the command locally -- in order to sync the commands and remove them in the client, :meth:`sync` must be called."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:6
msgid "The name of the root command to remove."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:8
msgid "The guild to remove the command from. If not given then it removes a global command instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:11
msgid "The type of command to remove. Defaults to :attr:`~discord.AppCommandType.chat_input`, i.e. slash commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:15
msgid "The application command that got removed. If nothing was removed then ``None`` is returned instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.remove_command:17
#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:14
msgid "Optional[Union[:class:`Command`, :class:`ContextMenu`, :class:`Group`]]"
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:1
msgid "Gets a application command from the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:3
msgid "The name of the root command to get."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:5
msgid "The guild to get the command from. If not given then it gets a global command instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:8
msgid "The type of command to get. Defaults to :attr:`~discord.AppCommandType.chat_input`, i.e. slash commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_command:12
msgid "The application command that was found. If nothing was found then ``None`` is returned instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:1
msgid "Gets all application commands from the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:3
msgid "The guild to get the commands from. If not given then it gets all global commands instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:6
msgid "The type of commands to get. Defaults to :attr:`~discord.AppCommandType.chat_input`, i.e. slash commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:10
msgid "The application commands from the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.get_commands:11
msgid "Union[List[:class:`ContextMenu`], List[Union[:class:`Command`, :class:`Group`]]"
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.walk_commands:1
msgid "An iterator that recursively walks through all application commands and child commands from the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.walk_commands:3
msgid "The guild to iterate the commands from. If not given then it iterates all global commands instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.walk_commands:6
msgid "The type of commands to iterate over. Defaults to :attr:`~discord.AppCommandType.chat_input`, i.e. slash commands."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.walk_commands:0
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.walk_commands:0
msgid "Yields"
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.walk_commands:10
msgid "Union[:class:`ContextMenu`, :class:`Command`, :class:`Group`] -- The application commands from the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:3
msgid "A callback that is called when any command raises an :exc:`AppCommandError`."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:5
msgid "The default implementation prints the traceback to stderr if the command does not have any error handlers attached to it."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:8
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:7
msgid "The interaction that is being handled."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.on_error:10
msgid "The command that failed, if any."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:1
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:1
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:1
msgid "A decorator that registers a coroutine as a local error handler."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:3
msgid "This must match the signature of the :meth:`on_error` callback."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:5
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:7
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:7
msgid "The error passed will be derived from :exc:`AppCommandError`."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:7
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:9
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:9
msgid "The coroutine to register as the local error handler."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.error:10
msgid "The coroutine passed is not actually a coroutine or does     not match the signature."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.command:1
msgid "Creates an application command directly under this tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.command:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.command:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.command:3
msgid "The name of the application command. If not given, it defaults to a lower-case version of the callback name."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.command:6
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.command:6
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.command:6
msgid "The description of the application command. This shows up in the UI to describe the application command. If not given, it defaults to the first line of the docstring of the callback shortened to 100 characters."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:1
msgid "Creates a application command context menu from a regular function directly under this tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.context_menu:3
msgid "This function must have a signature of :class:`~discord.Interaction` as its first parameter and taking either a :class:`~discord.Member`, :class:`~discord.User`, or :class:`~discord.Message`, or a :obj:`typing.Union` of ``Member`` and ``User`` as its second parameter."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.context_menu:19
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.context_menu:19
msgid "The name of the context menu command. If not given, it defaults to a title-case version of the callback name. Note that unlike regular slash commands this can have spaces and upper case characters in the name."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:3
msgid "Syncs the application commands to Discord."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:5
msgid "This must be called for the application commands to show up."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:7
msgid "Global commands take up to 1-hour to propagate but guild commands propagate instantly."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:10
msgid "The guild to sync the commands to. If ``None`` then it syncs all global commands instead."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:14
msgid "Syncing the commands failed."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:15
msgid "The client does not have an application ID."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:17
msgid "The application's commands that got synced."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.sync:18
msgid "List[:class:`AppCommand`]"
msgstr "List[:class:`AppCommand`]"

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.interaction_check:3
msgid "A global check to determine if an :class:`~discord.Interaction` should be processed by the tree."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.interaction_check:6
msgid "The default implementation returns True (all interactions are processed), but can be overridden if custom behaviour is desired."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:3
msgid "Given an :class:`~discord.Interaction`, calls the matching application command that's being invoked."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:6
msgid "This is usually called automatically by the library."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:8
msgid "The interaction to dispatch from."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:11
msgid "The application command referred to could not be found."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:12
msgid "The interaction data referred to a parameter that was not found in the     application command definition."
msgstr ""

#: ../../../discord/app_commands/tree.py:docstring of discord.app_commands.tree.CommandTree.call:13
msgid "An error occurred while calling the command."
msgstr ""

#: ../../interactions/api.rst:427
msgid "Commands"
msgstr ""

#: ../../interactions/api.rst:430
msgid "Command"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:1
msgid "A class that implements an application command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:3
msgid "These are usually not created manually, instead they are created using one of the following decorators:"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:6
msgid ":func:`~discord.app_commands.command`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:7
msgid ":meth:`Group.command <discord.app_commands.Group.command>`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:8
msgid ":meth:`CommandTree.command <discord.app_commands.CommandTree.command>`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:14
msgid "The name of the application command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:20
msgid "The description of the application command. This shows up in the UI to describe the application command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:27
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:26
msgid "A list of predicates that take a :class:`~discord.Interaction` parameter to indicate whether the command callback should be executed. If an exception is necessary to be thrown to signal failure, then one inherited from :exc:`AppCommandError` should be used. If all the checks fail without propagating an exception, :exc:`CheckFailure` is raised."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:35
msgid "The parent application command. ``None`` if there isn't one."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command:37
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Command.root_parent:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:26
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Group.root_parent:3
msgid "Optional[:class:`Group`]"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Command.callback:1
msgid "The coroutine that is executed when the command is called."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Command.callback:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.ContextMenu.callback:3
msgid ":ref:`coroutine <coroutine>`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Command.root_parent:1
msgid "The root parent of this command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:3
msgid "The local error handler is called whenever an exception is raised in the body of the command or during handling of the command. The error handler must take 2 parameters, the interaction and the error."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.error:12
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.error:12
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:1
msgid "A decorator that registers a coroutine as an autocomplete prompt for a parameter."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:3
msgid "The coroutine callback must have 2 parameters, the :class:`~discord.Interaction`, and the current value by the user (usually either a :class:`str`, :class:`int`, or :class:`float`, depending on the type of the parameter being marked as autocomplete)."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:7
msgid "To get the values from other parameters that may be filled in, accessing :attr:`.Interaction.namespace` will give a :class:`Namespace` object with those values."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:11
msgid "The coroutine decorator **must** return a list of :class:`~discord.app_commands.Choice` objects. Only up to 25 objects are supported."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:14
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.describe:4
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:4
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:8
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.guilds:13
msgid "Example:"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:34
msgid "The parameter name to register as autocomplete."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.autocomplete:37
msgid "The coroutine passed is not actually a coroutine or     the parameter is not found or of an invalid type."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.add_check:1
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.add_check:1
msgid "Adds a check to the command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.add_check:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.add_check:3
msgid "This is the non-decorator interface to :func:`check`."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.add_check:5
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.add_check:5
msgid "The function that will be used as a check."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.remove_check:1
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.remove_check:1
msgid "Removes a check from the command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.remove_check:3
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.remove_check:3
msgid "This function is idempotent and will not raise an exception if the function is not in the command's checks."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Command.remove_check:6
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu.remove_check:6
msgid "The function to remove from the checks."
msgstr ""

#: ../../interactions/api.rst:438
msgid "ContextMenu"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:1
msgid "A class that implements a context menu application command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:6
msgid ":func:`~discord.app_commands.context_menu`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:7
msgid ":meth:`CommandTree.command <discord.app_commands.CommandTree.context_menu>`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:13
msgid "The name of the context menu."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:19
msgid "The type of context menu application command. By default, this is inferred by the parameter of the callback."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.ContextMenu:22
msgid ":class:`.AppCommandType`"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.ContextMenu.callback:1
msgid "The coroutine that is executed when the context menu is called."
msgstr ""

#: ../../interactions/api.rst:446
msgid "Group"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:1
msgid "A class that implements an application command group."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:3
msgid "These are usually inherited rather than created manually."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:9
msgid "The name of the group. If not given, it defaults to a lower-case kebab-case version of the class name."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:16
msgid "The description of the group. This shows up in the UI to describe the group. If not given, it defaults to the docstring of the class shortened to 100 characters."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group:24
msgid "The parent group. ``None`` if there isn't one."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Group.root_parent:1
msgid "The parent of this group."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Group.commands:1
msgid "The commands that this group contains."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.Group.commands:3
msgid "List[Union[:class:`Command`, :class:`Group`]]"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.walk_commands:1
msgid "An iterator that recursively walks through all commands that this group contains."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.walk_commands:3
msgid "Union[:class:`Command`, :class:`Group`] -- The commands in this group."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:3
msgid "A callback that is called when a child's command raises an :exc:`AppCommandError`."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:5
msgid "The default implementation does nothing."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.on_error:9
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:16
msgid "The command that failed."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:3
msgid "A callback that is called when an interaction happens within the group that checks whether a command inside the group should be executed."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.interaction_check:13
msgid "If an exception occurs within the body then the check is considered a failure and error handlers such as :meth:`on_error` is called. See :exc:`AppCommandError` for more information."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:1
msgid "Adds a command or group to this group's internal list of commands."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:3
msgid "The command or group to add."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:5
msgid "Whether to override a pre-existing command or group with the same name. If ``False`` then an exception is raised."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:9
msgid "The command or group is already registered. Note that the :attr:`CommandAlreadyRegistered.guild_id`     attribute will always be ``None`` in this case."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:10
msgid "There are too many commands already registered or the group is too     deeply nested."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.add_command:11
msgid "The wrong command type was passed."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:1
msgid "Removes a command or group from the internal list of commands."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:3
msgid "The name of the command or group to remove."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:6
msgid "The command that was removed. If nothing was removed then ``None`` is returned instead."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.remove_command:8
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:8
msgid "Optional[Union[:class:`~discord.app_commands.Command`, :class:`~discord.app_commands.Group`]]"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:1
msgid "Retrieves a command or group from its name."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:3
msgid "The name of the command or group to retrieve."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.get_command:6
msgid "The command or group that was retrieved. If nothing was found then ``None`` is returned instead."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.Group.command:1
msgid "Creates an application command under this group."
msgstr ""

#: ../../interactions/api.rst:454
msgid "Decorators"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.command:1
msgid "Creates an application command from a regular function."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.context_menu:1
msgid "Creates a application command context menu from a regular function."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.describe:1
msgid "Describes the given parameters by their name using the key of the keyword argument as the name."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.describe:13
msgid "The description of the parameters."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.describe:15
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:16
msgid "The parameter name is not found."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:1
msgid "Renames the given parameters by their name using the key of the keyword argument as the name."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:13
msgid "The name of the parameters."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.rename:15
msgid "The parameter name is already used by another parameter."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:1
msgid "Instructs the given parameters by their name to use the given choices for their choices."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:19
msgid "This is not the only way to provide choices to a command. There are two more ergonomic ways of doing this. The first one is to use a :obj:`typing.Literal` annotation:"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:29
msgid "The second way is to use an :class:`enum.Enum`:"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:44
msgid "The choices of the parameters."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.choices:46
#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:29
msgid "The parameter name is not found or the parameter type was incorrect."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:1
msgid "Associates the given parameters with the given autocomplete callback."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:3
msgid "Autocomplete is only supported on types that have :class:`str`, :class:`int`, or :class:`float` values."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:6
msgid "For more information, see the :meth:`Command.autocomplete` documentation."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.autocomplete:27
msgid "The parameters to mark as autocomplete."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.guilds:1
msgid "Associates the given guilds with the command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.guilds:3
msgid "When the command instance is added to a :class:`CommandTree`, the guilds that are specified by this decorator become the default guilds that it's added to rather than being a global command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.guilds:9
msgid "Due to an implementation quirk and Python limitation, if this is used in conjunction with the :meth:`CommandTree.command` or :meth:`CommandTree.context_menu` decorator then this must go below that decorator."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.guilds:24
msgid "The guilds to associate this command with. The command tree will use this as the default when added rather than adding it as a global command."
msgstr ""

#: ../../interactions/api.rst:478
msgid "Checks"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:1
msgid "A decorator that adds a check to an application command."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:3
msgid "These checks should be predicates that take in a single parameter taking a :class:`~discord.Interaction`. If the check returns a ``False``\\-like value then during invocation a :exc:`CheckFailure` exception is raised and sent to the appropriate error handlers."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:8
msgid "These checks can be either a coroutine or not."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:12
msgid "Creating a basic check to see if the command invoker is you."
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:24
msgid "Transforming common checks into its own decorator:"
msgstr ""

#: ../../../discord/app_commands/commands.py:docstring of discord.app_commands.commands.check:38
msgid "The predicate to check if the command should be invoked."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:1
msgid "A :func:`~discord.app_commands.check` that is added that checks if the member invoking the command has the role specified via the name or ID specified."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:4
msgid "If a string is specified, you must give the exact name of the role, including caps and spelling."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:7
msgid "If an integer is specified, you must give the exact snowflake ID of the role."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:9
msgid "This check raises one of two special exceptions, :exc:`~discord.app_commands.MissingRole` if the user is missing a role, or :exc:`~discord.app_commands.NoPrivateMessage` if it is used in a private message. Both inherit from :exc:`~discord.app_commands.CheckFailure`."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:17
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:15
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:17
msgid "This is different from the permission system that Discord provides for application commands. This is done entirely locally in the program rather than being handled by Discord."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_role:21
msgid "The name or ID of the role to check."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:1
msgid "A :func:`~discord.app_commands.check` that is added that checks if the member invoking the command has **any** of the roles specified. This means that if they have one out of the three roles specified, then this check will return ``True``."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:5
msgid "Similar to :func:`has_role`\\, the names or IDs passed in must be exact."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:7
msgid "This check raises one of two special exceptions, :exc:`~discord.app_commands.MissingAnyRole` if the user is missing all roles, or :exc:`~discord.app_commands.NoPrivateMessage` if it is used in a private message. Both inherit from :exc:`~discord.app_commands.CheckFailure`."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:19
msgid "An argument list of names or IDs to check that the member has roles wise."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_any_role:23
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:25
msgid "Example"
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:1
msgid "A :func:`~discord.app_commands.check` that is added that checks if the member has all of the permissions necessary."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:4
msgid "Note that this check operates on the permissions given by :attr:`discord.Interaction.permissions`."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:7
msgid "The permissions passed in must be exactly like the properties shown under :class:`discord.Permissions`."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:10
msgid "This check raises a special exception, :exc:`~discord.app_commands.MissingPermissions` that is inherited from :exc:`~discord.app_commands.CheckFailure`."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.has_permissions:21
msgid "Keyword arguments denoting the permissions to check for."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.bot_has_permissions:1
msgid "Similar to :func:`has_permissions` except checks if the bot itself has the permissions listed."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.bot_has_permissions:4
msgid "This check raises a special exception, :exc:`~discord.app_commands.BotMissingPermissions` that is inherited from :exc:`~discord.app_commands.CheckFailure`."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:1
msgid "A decorator that adds a cooldown to a command."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:3
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:3
msgid "A cooldown allows a command to only be used a specific amount of times in a specific time frame. These cooldowns are based off of the ``key`` function provided. If a ``key`` is not provided then it defaults to a user-level cooldown. The ``key`` function must take a single parameter, the :class:`discord.Interaction` and return a value that is used as a key to the internal cooldown mapping."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:10
msgid "The ``key`` function can optionally be a coroutine."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:12
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:17
msgid "If a cooldown is triggered, then :exc:`~discord.app_commands.CommandOnCooldown` is raised to the error handlers."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:17
msgid "Setting a one per 5 seconds per member cooldown on a command:"
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:31
msgid "The number of times a command can be used before triggering a cooldown."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:33
msgid "The amount of seconds to wait for a cooldown when it's been triggered."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.cooldown:35
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:44
msgid "A function that returns a key to the mapping denoting the type of cooldown. Can optionally be a coroutine. If not given then defaults to a user-level cooldown. If ``None`` is passed then it is interpreted as a \"global\" cooldown."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:1
msgid "A decorator that adds a dynamic cooldown to a command."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:10
msgid "If a ``factory`` function is given, it must be a function that accepts a single parameter of type :class:`discord.Interaction` and must return a :class:`~discord.app_commands.Cooldown` or ``None``. If ``None`` is returned then that cooldown is effectively bypassed."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:15
msgid "Both ``key`` and ``factory`` can optionally be coroutines."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:22
msgid "Setting a cooldown for everyone but the owner."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.dynamic_cooldown:41
msgid "A function that takes an interaction and returns a cooldown that will apply to that interaction or ``None`` if the interaction should not have a cooldown."
msgstr ""

#: ../../interactions/api.rst:502
msgid "Cooldown"
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:1
msgid "Represents a cooldown for a command."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:7
msgid "The total number of tokens available per :attr:`per` seconds."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:9
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:15
#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:8
#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:42
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:17
msgid ":class:`float`"
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown:13
msgid "The length of the cooldown period in seconds."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:1
msgid "Returns the number of available tokens before rate limiting is applied."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:3
msgid "The time in seconds since Unix epoch to calculate tokens at. If not supplied then :func:`time.time()` is used."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_tokens:7
msgid "The number of tokens available before the cooldown is to be applied."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:1
msgid "Returns the time in seconds until the cooldown will be reset."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:3
msgid "The current time in seconds since Unix epoch. If not supplied, then :func:`time.time()` is used."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.get_retry_after:7
msgid "The number of seconds to wait before this cooldown will be reset."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:1
msgid "Updates the cooldown rate limit."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:3
msgid "The time in seconds since Unix epoch to update the rate limit at. If not supplied, then :func:`time.time()` is used."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.update_rate_limit:7
msgid "The retry-after time in seconds if rate limited."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.reset:1
msgid "Reset the cooldown to its initial state."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.copy:1
msgid "Creates a copy of this cooldown."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.copy:3
msgid "A new instance of this cooldown."
msgstr ""

#: ../../../discord/app_commands/checks.py:docstring of discord.app_commands.checks.Cooldown.copy:4
msgid ":class:`Cooldown`"
msgstr ""

#: ../../interactions/api.rst:511
msgid "Namespace"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:1
msgid "An object that holds the parameters being passed to a command in a mostly raw state."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:3
msgid "This class is deliberately simple and just holds the option name and resolved value as a simple key-pair mapping. These attributes can be accessed using dot notation. For example, an option with the name of ``example`` can be accessed using ``ns.example``. If an attribute is not found, then ``None`` is returned rather than an attribute error."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:14
msgid "Checks if two namespaces are equal by checking if all attributes are equal."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:17
msgid "Checks if two namespaces are not equal."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:20
msgid "Returns an attribute if it is found, otherwise raises a :exc:`KeyError`."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:24
msgid "Checks if the attribute is in the namespace."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:27
msgid "Returns an iterator of ``(name, value)`` pairs. This allows it to be, for example, constructed as a dict or a list of pairs."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:30
msgid "This namespace object converts resolved objects into their appropriate form depending on their type. Consult the table below for conversion information."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:34
msgid "Option Type"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:34
msgid "Resolved Type"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:36
msgid ":attr:`.AppCommandOptionType.string`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:38
msgid ":attr:`.AppCommandOptionType.integer`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:40
msgid ":attr:`.AppCommandOptionType.boolean`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:42
msgid ":attr:`.AppCommandOptionType.number`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:44
msgid ":attr:`.AppCommandOptionType.user`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:44
msgid ":class:`~discord.User` or :class:`~discord.Member`"
msgstr ":class:`~discord.User` または :class:`~discord.Member`"

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:46
msgid ":attr:`.AppCommandOptionType.channel`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:46
msgid ":class:`.AppCommandChannel` or :class:`.AppCommandThread`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:48
msgid ":attr:`.AppCommandOptionType.role`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:48
msgid ":class:`~discord.Role`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:50
msgid ":attr:`.AppCommandOptionType.mentionable`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:50
msgid ":class:`~discord.User` or :class:`~discord.Member`, or :class:`~discord.Role`"
msgstr ":class:`~discord.User` または :class:`~discord.Member` または :class:`~discord.Role`"

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:52
msgid ":attr:`.AppCommandOptionType.attachment`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:52
msgid ":class:`~discord.Attachment`"
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:57
msgid "In autocomplete interactions, the namespace might not be validated or filled in. Discord does not send the resolved data as well, so this means that certain fields end up just as IDs rather than the resolved data. In these cases, a :class:`discord.Object` is returned instead."
msgstr ""

#: ../../../discord/app_commands/namespace.py:docstring of discord.app_commands.namespace.Namespace:61
msgid "This is a Discord limitation."
msgstr ""

#: ../../interactions/api.rst:519
msgid "Transformers"
msgstr ""

#: ../../interactions/api.rst:522
msgid "Transformer"
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer:1
msgid "The base class that allows a type annotation in an application command parameter to map into a :class:`~discord.AppCommandOptionType` and transform the raw value into one from this type."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer:5
msgid "This class is customisable through the overriding of :func:`classmethod` in the class and by using it as the second type parameter of the :class:`~discord.app_commands.Transform` class. For example, to convert a string into a custom pair type:"
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.type:1
msgid ":class:`~discord.AppCommandOptionType`: The option type associated with this transformer."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.type:3
msgid "This must be a :obj:`classmethod`."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.type:5
msgid "Defaults to :attr:`~discord.AppCommandOptionType.string`."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.channel_types:1
msgid "List[:class:`~discord.ChannelType`]: A list of channel types that are allowed to this parameter."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.channel_types:3
msgid "Only valid if the :meth:`type` returns :attr:`~discord.AppCommandOptionType.channel`."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.channel_types:5
msgid "Defaults to an empty list."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.min_value:1
msgid "Optional[:class:`int`]: The minimum supported value for this parameter."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.min_value:3
#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.max_value:3
msgid "Only valid if the :meth:`type` returns :attr:`~discord.AppCommandOptionType.number` or :attr:`~discord.AppCommandOptionType.integer`."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.min_value:6
#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.max_value:6
msgid "Defaults to ``None``."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.max_value:1
msgid "Optional[:class:`int`]: The maximum supported value for this parameter."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.transform:1
msgid "|maybecoro|"
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.transform:3
msgid "Transforms the converted option value into another value."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.transform:5
msgid "The value passed into this transform function is the same as the one in the :class:`conversion table <discord.app_commands.Namespace>`."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.transform:8
msgid "The interaction being handled."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transformer.transform:10
msgid "The value of the given argument after being resolved. See the :class:`conversion table <discord.app_commands.Namespace>` for how certain option types correspond to certain values."
msgstr ""

#: ../../interactions/api.rst:530
msgid "Transform"
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transform:1
msgid "A type annotation that can be applied to a parameter to customise the behaviour of an option type by transforming with the given :class:`Transformer`. This requires the usage of two generic parameters, the first one is the type you're converting to and the second one is the type of the :class:`Transformer` actually doing the transformation."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transform:6
#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:4
msgid "During type checking time this is equivalent to :obj:`typing.Annotated` so type checkers understand the intent of the code."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Transform:9
msgid "For example usage, check :class:`Transformer`."
msgstr ""

#: ../../interactions/api.rst:538
msgid "Range"
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:1
msgid "A type annotation that can be applied to a parameter to require a numeric type to fit within the range provided."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:7
msgid "Some example ranges:"
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:9
msgid "``Range[int, 10]`` means the minimum is 10 with no maximum."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:10
msgid "``Range[int, None, 10]`` means the maximum is 10 with no minimum."
msgstr ""

#: ../../../discord/app_commands/transformers.py:docstring of discord.app_commands.transformers.Range:11
msgid "``Range[int, 1, 10]`` means the minimum is 1 and the maximum is 10."
msgstr ""

#: ../../interactions/api.rst:546
msgid "Exceptions"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.AppCommandError:1
msgid "The base exception type for all application command related errors."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.AppCommandError:3
msgid "This inherits from :exc:`discord.DiscordException`."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.AppCommandError:5
msgid "This exception and exceptions inherited from it are handled in a special way as they are caught and passed into various error handlers in this order:"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.AppCommandError:9
msgid ":meth:`Command.error <discord.app_commands.Command.error>`"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.AppCommandError:10
msgid ":meth:`Group.on_error <discord.app_commands.Group.on_error>`"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.AppCommandError:11
msgid ":meth:`CommandTree.on_error <discord.app_commands.CommandTree.on_error>`"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:1
msgid "An exception raised when the command being invoked raised an exception."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:3
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:4
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CheckFailure:3
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:3
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandSignatureMismatch:6
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:3
msgid "This inherits from :exc:`~discord.app_commands.AppCommandError`."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:9
msgid "The original exception that was raised. You can also get this via the ``__cause__`` attribute."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:12
msgid ":exc:`Exception`"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandInvokeError:18
msgid "Union[:class:`Command`, :class:`ContextMenu`]"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:1
msgid "An exception raised when a :class:`Transformer` or type annotation fails to convert to its target type."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:6
msgid "If an exception occurs while converting that does not subclass :exc:`AppCommandError` then the exception is wrapped into this exception. The original exception can be retrieved using the ``__cause__`` attribute. Otherwise if the exception derives from :exc:`AppCommandError` then it will be propagated as-is."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:16
msgid "The value that failed to convert."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:18
msgid "Any"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:22
msgid "The type of argument that failed to convert."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:28
msgid "The transformer that failed the conversion."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.TransformerError:30
msgid "Type[:class:`Transformer`]"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CheckFailure:1
msgid "An exception raised when check predicates in a command have failed."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.NoPrivateMessage:1
msgid "An exception raised when a command does not work in a direct message."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.NoPrivateMessage:3
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingRole:3
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingAnyRole:4
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingPermissions:4
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.BotMissingPermissions:4
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:3
msgid "This inherits from :exc:`~discord.app_commands.CheckFailure`."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingRole:1
msgid "An exception raised when the command invoker lacks a role to run a command."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingRole:9
msgid "The required role that is missing. This is the parameter passed to :func:`~discord.app_commands.checks.has_role`."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingRole:12
msgid "Union[:class:`str`, :class:`int`]"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingAnyRole:1
msgid "An exception raised when the command invoker lacks any of the roles specified to run a command."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingAnyRole:10
msgid "The roles that the invoker is missing. These are the parameters passed to :func:`~discord.app_commands.checks.has_any_role`."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingAnyRole:13
msgid "List[Union[:class:`str`, :class:`int`]]"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingPermissions:1
msgid "An exception raised when the command invoker lacks permissions to run a command."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.MissingPermissions:10
#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.BotMissingPermissions:10
msgid "The required permissions that are missing."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.BotMissingPermissions:1
msgid "An exception raised when the bot's member lacks permissions to run a command."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:1
msgid "An exception raised when the command being invoked is on cooldown."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:9
msgid "The cooldown that was triggered."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:11
msgid ":class:`~discord.app_commands.Cooldown`"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandOnCooldown:15
msgid "The amount of seconds to wait before you can retry again."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:1
msgid "An exception raised when a command is already registered."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:9
msgid "The name of the command already registered."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandAlreadyRegistered:15
msgid "The guild ID this command was already registered at. If ``None`` then it was a global command."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandSignatureMismatch:1
msgid "An exception raised when an application command from Discord has a different signature from the one provided in the code. This happens because your command definition differs from the command definition you provided Discord. Either your code is out of date or the data from Discord is out of sync."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandSignatureMismatch:12
msgid "The command that had the signature mismatch."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandSignatureMismatch:14
msgid "Union[:class:`~.app_commands.Command`, :class:`~.app_commands.ContextMenu`, :class:`~.app_commands.Group`]"
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:1
msgid "An exception raised when an application command could not be found."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:9
msgid "The name of the application command not found."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:15
msgid "A list of parent command names that were previously found prior to the application command not being found."
msgstr ""

#: ../../../discord/app_commands/errors.py:docstring of discord.app_commands.errors.CommandNotFound:22
msgid "The type of command that was not found."
msgstr ""

#: ../../interactions/api.rst:588
msgid "Exception Hierarchy"
msgstr ""

#: ../../interactions/api.rst:604
msgid ":exc:`~discord.DiscordException`"
msgstr ""

#: ../../interactions/api.rst:604
msgid ":exc:`~discord.app_commands.AppCommandError`"
msgstr ""

#: ../../interactions/api.rst:594
msgid ":exc:`~discord.app_commands.CommandInvokeError`"
msgstr ""

#: ../../interactions/api.rst:595
msgid ":exc:`~discord.app_commands.TransformerError`"
msgstr ""

#: ../../interactions/api.rst:601
msgid ":exc:`~discord.app_commands.CheckFailure`"
msgstr ""

#: ../../interactions/api.rst:597
msgid ":exc:`~discord.app_commands.NoPrivateMessage`"
msgstr ""

#: ../../interactions/api.rst:598
msgid ":exc:`~discord.app_commands.MissingRole`"
msgstr ""

#: ../../interactions/api.rst:599
msgid ":exc:`~discord.app_commands.MissingAnyRole`"
msgstr ""

#: ../../interactions/api.rst:600
msgid ":exc:`~discord.app_commands.MissingPermissions`"
msgstr ""

#: ../../interactions/api.rst:601
msgid ":exc:`~discord.app_commands.BotMissingPermissions`"
msgstr ""

#: ../../interactions/api.rst:602
msgid ":exc:`~discord.app_commands.CommandOnCooldown`"
msgstr ""

#: ../../interactions/api.rst:603
msgid ":exc:`~discord.app_commands.CommandAlreadyRegistered`"
msgstr ""

#: ../../interactions/api.rst:604
msgid ":exc:`~discord.app_commands.CommandSignatureMismatch`"
msgstr ""

#: ../../interactions/api.rst:605
msgid ":exc:`~discord.app_commands.CommandNotFound`"
msgstr ""

